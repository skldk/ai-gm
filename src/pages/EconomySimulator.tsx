import React, { useState, useEffect, useRef } from 'react';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine, ResponsiveContainer } from 'recharts';
import { Fireworks } from 'fireworks-js';

function formatNumber(value: number) {
  return value.toLocaleString('ru-RU');
}

function getInitialMetrics() {
  return {
    AvPrice: 20, // 40
    COGS: 15, // 30
    C1: 10, // %
    Users: 200,
    CPUser: 20, // 25
    FixCosts: 3000,
    Margin: 0.25,
    AMPPU: 5,
    AMPU: 2,
    Profit: 1000,
    ProfitNet: -6900, // -19000
  };
}

type Metrics = ReturnType<typeof getInitialMetrics>;

type Initiative = {
  title: string;
  description: string;
  apply: (m: Metrics) => Metrics;
  successChance: number;
  partialEffect?: (m: Metrics) => Metrics;
  risk?: { chance: number; effect: (m: Metrics) => Metrics; message: string };
};

type Department = 'acquisition' | 'product' | 'onboarding' | 'admin';

const DEPARTMENTS: { key: Department; label: string; icon: string; desc: string }[] = [
  { key: 'acquisition', label: '–ü—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ', icon: 'üìà', desc: '–í–ª–∏—è–µ—Ç –Ω–∞: Users, C1, CPUser. –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏: —Å–Ω–∏–∂–µ–Ω–∏–µ CPUser, –ø–æ–≤—ã—à–µ–Ω–∏–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ —Ç—Ä–∞—Ñ–∏–∫–∞.' },
  { key: 'product', label: '–ü—Ä–æ–¥—É–∫—Ç', icon: 'üõ†Ô∏è', desc: '–í–ª–∏—è–µ—Ç –Ω–∞: AvPrice, COGS. –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏: —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∞, —Å–Ω–∏–∂–µ–Ω–∏–µ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏.' },
  { key: 'onboarding', label: '–û–Ω–±–æ—Ä–¥–∏–Ω–≥', icon: 'üéì', desc: '–í–ª–∏—è–µ—Ç –Ω–∞: C1. –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏: —É–ª—É—á—à–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ —á–µ—Ä–µ–∑ –∞–¥–∞–ø—Ç–∞—Ü–∏—é –∫–ª–∏–µ–Ω—Ç–æ–≤.' },
  { key: 'admin', label: '–ê–¥–º–∏–Ω', icon: 'üè¢', desc: '–í–ª–∏—è–µ—Ç –Ω–∞: FixCosts. –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏: –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤.' },
];

const INITIATIVES: Record<Department, Initiative[]> = {
  acquisition: 
  
  [
    
      // SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 
      { title: '–í–Ω–µ–¥—Ä–∏—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä SEO-—Ç–µ–∫—Å—Ç–æ–≤', description: 'Users +100, CPUser -$10', apply: m => recalcMetrics({...m, Users: m.Users + 100, CPUser: Math.max(m.CPUser - 10, 0)}), successChance: 0.7, risk: {chance: 0.25, effect: m => recalcMetrics({...m, C1: m.C1 - 5}), message: '–ü–µ—Ä–µ–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è ‚Üí C1 -5%'}}, // –ø–∞–¥–µ–Ω–∏—è –≤ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–∏
      { title: '–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–Ω—Ç –±–ª–æ–≥–∞', description: 'Users +300, CPUser -$17, FixCost +$2500 ', apply: m => recalcMetrics({...m, Users: m.Users + 300, CPUser: Math.max(m.CPUser - 17, 0), FixCosts: m.FixCosts + 2500}), successChance: 0.7, risk: {chance: 0.7, effect: m => recalcMetrics({...m, C1: m.C1 - 10}), message: '–ú–Ω–æ–≥–æ –Ω–µ —Ü–µ–ª–µ–≤–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞ ‚Üí C1 -10%'}}, // –ø–∞–¥–µ–Ω–∏—è –≤ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–∏
  
      // –ë—Ä–µ–Ω–¥–æ–≤—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
      { title: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –º–µ–¥–∏–π–Ω—É—é —Ä–µ–∫–ª–∞–º—É (PR)', description: 'Users +3000, FixCosts +$25 000', apply: m => recalcMetrics({...m, Users: m.Users + 3000, FixCosts: m.FixCosts + 25000}), successChance: 0.55, risk: {chance: 0.7, effect: m => recalcMetrics({...m, C1: m.C1 - 10}), message: '–ú–Ω–æ–≥–æ –Ω–µ —Ü–µ–ª–µ–≤–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞ ‚Üí C1 -10%'}}, // –ø–∞–¥–µ–Ω–∏—è –≤ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–∏
  
      // Performance-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥
      { title: '–ù–µ–±–æ–ª—å—à–æ–µ –º–∞—à—Ç–∏–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π', description: 'Users +1 000, CPUser +$2', apply: m => recalcMetrics({...m, Users: m.Users + 500, CPUser: Math.max(m.CPUser + 2, 0)}), successChance: 0.65},
      { title: '–ó–∞–∫—É–ø–∞—Ç—å –±–æ–ª—å—à–µ —Ç—Ä–∞—Ñ–∏–∫–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ', description: 'Users +5 000, CPUser +$3', apply: m => recalcMetrics({...m, Users: m.Users + 1000, CPUser: Math.max(m.CPUser + 3, 0)}), successChance: 0.65},
      { title: '–ó–∞–∫—É–ø–∞—Ç—å –±–æ–ª—å—à–µ —Ç—Ä–∞—Ñ–∏–∫–∞ –ø–æ –≤—Å–µ–º –∫–∞–Ω–∞–ª–∞–º', description: 'Users +10 000, CPUser +$6', apply: m => recalcMetrics({...m, Users: m.Users + 3000, CPUser: Math.max(m.CPUser + 6, 0)}), successChance: 0.65},
  
      // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã (8 —à—Ç.)
      { title: '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±—é–¥–∂–µ—Ç—ã –ø–æ–¥ —É—Å–ø–µ—à–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏', description: 'CPUser -$7', apply: m => recalcMetrics({...m, CPUser: Math.max(m.CPUser - 7, 0)}), successChance: 0.72, risk: {chance: 0.3, effect: m => recalcMetrics({...m, Users: m.Users - 100}), message: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–æ–∫—Ä–∞—Ç–∏–ª–∞ –ø–æ—Ç–æ–∫ ‚Üí Users -100'}},
      { title: '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ–∫–∞–∑–∞', description: 'CPUser -$4, C1 +1%', apply: m => recalcMetrics({...m, CPUser: Math.max(m.CPUser - 4, 0), C1: m.C1 + 1}), successChance: 0.75, risk: {chance: 0.2, effect: m => recalcMetrics({...m, CPUser: Math.max(m.CPUser + 1, 0)}), message: '–ê–ª–≥–æ—Ä–∏—Ç–º—ã —É—á–∞—Ç—Å—è –∏ –ø–æ–∫–∞ CPUser —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å ‚Üí CPUser +1$'}},
      { title: '–ü—Ä–æ–≤–µ—Å—Ç–∏ –∞—É–¥–∏—Ç, –∏ –¥–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∞–≥–µ–Ω—Å—Ç–≤—É', description: 'CPUser -$5', apply: m => recalcMetrics({...m, CPUser: Math.max(m.CPUser - 5, 0)}), successChance: 0.7},
      
      // –†–∏—Å–∫–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã
      { title: '–ó–∞–∫—É–ø–∏—Ç—å —Ä–µ–∫–ª–∞–º—É —É –±–ª–æ–≥–µ—Ä–∞-–º–∏–ª–ª–∏–æ–Ω–∏–∫–∞', description: 'Users +8000, FixCosts +$75 000', apply: m => recalcMetrics({...m, Users: m.Users + 8000, FixCosts: m.FixCosts + 75000}), successChance: 0.4, risk: {chance: 0.2, effect: m => recalcMetrics({...m, C1: m.C1 - 15}), message: '–§—Ä–æ–¥ ‚Üí C1 -15%'}},
  
      // –ì–∏–±—Ä–∏–¥–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
      { title: '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å omnichannel-–≤–æ—Ä–æ–Ω–∫—É', description: 'CPUser -$6, Users +200', apply: m => recalcMetrics({...m, CPUser: Math.max(m.CPUser - 6, 0), Users: m.Users + 200}), successChance: 0.7}
  ],
  
 /* [ // –±–æ–ª—å—à–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤ –Ω–∞ —Å–Ω–∏–∂–µ–Ω–∏–µ CPUser  // –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –Ω–µ –º–µ–Ω—è—é—Ç—Å—è 
    // –∑–¥–µ—Å—å –æ–Ω—É–ª–µ–Ω—ã —Ä–∏—Å–∫–∏

    
    { title: '–ó–∞–ø—É—Å–∫ SEO-–∫–∞–º–ø–∞–Ω–∏–∏', description: 'CPUser ‚Üí 0, Users +500', apply: m => recalcMetrics({ ...m, CPUser: 0, Users: m.Users + Math.floor(500) }), successChance: 0.7, partialEffect: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(100 + 0*Math.random() * 200) }), risk: { chance: 0, effect: m => recalcMetrics({ ...m, Users: m.Users - Math.floor(100 + Math.random() * 200) }), message: '–ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ 2 —Ö–æ–¥–∞ ‚Äî Users -100-300.' } },
    { title: '–¢–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞', description: 'C1 +10%, Users +300', apply: m => recalcMetrics({ ...m, C1: m.C1 + Math.floor(10), Users: m.Users + Math.floor(300) }), successChance: 0.8, partialEffect: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(50 + Math.random() * 100) }), risk: { chance: 0, effect: m => recalcMetrics({ ...m, CPUser: m.CPUser + Math.floor(2 + Math.random() * 3) }), message: 'CPUser +$2-5 (–Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫).' } },
    { title: '–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å –±–ª–æ–≥–µ—Ä–æ–º', description: 'Users +600, C1 -5%', apply: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(600), C1: m.C1 - Math.floor(5) }), successChance: 0.6, partialEffect: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(100 + Math.random() * 200) }), risk: { chance: 0, effect: m => recalcMetrics({ ...m, Users: m.Users - Math.floor(200 + Math.random() * 300) }), message: '–ü—Ä–∏ –Ω–∏–∑–∫–æ–º NPS ‚Üí Users -200-500.' } },
    { title: 'A/B —Ç–µ—Å—Ç—ã –ª–µ–Ω–¥–∏–Ω–≥–∞', description: 'C1 +15%', apply: m => recalcMetrics({ ...m, C1: m.C1 + Math.floor(15) }), successChance: 0.7, risk: { chance: 0, effect: m => recalcMetrics({ ...m, C1: m.C1 - Math.floor(4 + Math.random() * 4) }), message: '–ü—Ä–æ–≤–∞–ª —Ç–µ—Å—Ç–∞ ‚Üí C1 -4-8%.' } },
    { title: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', description: 'Users +200, COGS +$2', apply: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(200 + Math.random() * 0), COGS: m.COGS + Math.floor(1 + Math.random() * 2) }), successChance: 0.7, risk: { chance: 0, effect: m => m, message: '–ë–æ–Ω—É—Å—ã –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —É–≤–µ–ª–∏—á–∏–ª–∏ COGS.' } },
    { title: '–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞', description: 'Users +500, CPUser +$2', apply: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(500 + Math.random() * 0), CPUser: m.CPUser + Math.floor(1 + Math.random() * 2) }), successChance: 0.7, risk: { chance: 0, effect: m => recalcMetrics({ ...m, C1: m.C1 - Math.floor(4 + Math.random() * 3) }), message: '–í—ã—Å–æ–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è ‚Üí C1 -4-7%.' } },
    { title: '–í–µ–±–∏–Ω–∞—Ä—ã –¥–ª—è –¶–ê', description: 'C1 +12%, Users +100, FixCosts +$800', apply: m => recalcMetrics({ ...m, C1: m.C1 + Math.floor(10 + Math.random() * 4), Users: m.Users + Math.floor(80 + Math.random() * 40), FixCosts: m.FixCosts + Math.floor(600 + Math.random() * 400) }), successChance: 0.7 },
    { title: '–ü–æ–∫—É–ø–∫–∞ –ª–∏–¥–æ–≤', description: 'Users +800, C1 -15%', apply: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(600 + Math.random() * 400), C1: m.C1 - Math.floor(12 + Math.random() * 6) }), successChance: 0.7, risk: { chance: 0, effect: m => recalcMetrics({ ...m, CPUser: m.CPUser + Math.floor(2 + Math.random() * 2) }), message: '–†–∏—Å–∫ —Å–ø–∞–º–∞ ‚Üí CPUser +$2-4.' } },
    { title: 'Email-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥', description: 'Users +200, C1 +8%', apply: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(150 + Math.random() * 100), C1: m.C1 + Math.floor(6 + Math.random() * 4) }), successChance: 0.7, risk: { chance: 0, effect: m => recalcMetrics({ ...m, C1: m.C1 - Math.floor(4 + Math.random() * 3) }), message: '–ß–∞—Å—Ç—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏ ‚Üí C1 -4-7%.' } },
    { title: '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞', description: 'Users +300 (SEO-—Ç—Ä–∞—Ñ–∏–∫)', apply: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(200 + Math.random() * 200) }), successChance: 0.7 },
  */
    //{ title: '–ó–∞–ø—É—Å–∫ SEO-–∫–∞–º–ø–∞–Ω–∏–∏', description: 'CPUser ‚Üí 0, Users +500', apply: m => recalcMetrics({ ...m, CPUser: 0, Users: m.Users + Math.floor(300 + Math.random() * 400) }), successChance: 0.7, partialEffect: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(100 + Math.random() * 200) }), risk: { chance: 0.25, effect: m => recalcMetrics({ ...m, Users: m.Users - Math.floor(100 + Math.random() * 200) }), message: '–ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ 2 —Ö–æ–¥–∞ ‚Äî Users -100-300.' } },
    //{ title: '–¢–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞', description: 'C1 +10%, Users +300', apply: m => recalcMetrics({ ...m, C1: m.C1 + Math.floor(8 + Math.random() * 4), Users: m.Users + Math.floor(200 + Math.random() * 200) }), successChance: 0.8, partialEffect: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(50 + Math.random() * 100) }), risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, CPUser: m.CPUser + Math.floor(2 + Math.random() * 3) }), message: 'CPUser +$2-5 (–Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫).' } },
    //{ title: '–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å –±–ª–æ–≥–µ—Ä–æ–º', description: 'Users +600, C1 -5%', apply: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(400 + Math.random() * 400), C1: m.C1 - Math.floor(3 + Math.random() * 4) }), successChance: 0.6, partialEffect: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(100 + Math.random() * 200) }), risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, Users: m.Users - Math.floor(200 + Math.random() * 300) }), message: '–ü—Ä–∏ –Ω–∏–∑–∫–æ–º NPS ‚Üí Users -200-500.' } },
    //{ title: 'A/B —Ç–µ—Å—Ç—ã –ª–µ–Ω–¥–∏–Ω–≥–∞', description: 'C1 +15%', apply: m => recalcMetrics({ ...m, C1: m.C1 + Math.floor(12 + Math.random() * 6) }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, C1: m.C1 - Math.floor(4 + Math.random() * 4) }), message: '–ü—Ä–æ–≤–∞–ª —Ç–µ—Å—Ç–∞ ‚Üí C1 -4-8%.' } },
    //{ title: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', description: 'Users +200, COGS +$2', apply: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(150 + Math.random() * 100), COGS: m.COGS + Math.floor(1 + Math.random() * 2) }), successChance: 0.7, risk: { chance: 0.2, effect: m => m, message: '–ë–æ–Ω—É—Å—ã –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —É–≤–µ–ª–∏—á–∏–ª–∏ COGS.' } },
    //{ title: '–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞', description: 'Users +500, CPUser +$2', apply: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(400 + Math.random() * 200), CPUser: m.CPUser + Math.floor(1 + Math.random() * 2) }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, C1: m.C1 - Math.floor(4 + Math.random() * 3) }), message: '–í—ã—Å–æ–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è ‚Üí C1 -4-7%.' } },
    //{ title: '–í–µ–±–∏–Ω–∞—Ä—ã –¥–ª—è –¶–ê', description: 'C1 +12%, Users +100, FixCosts +$800', apply: m => recalcMetrics({ ...m, C1: m.C1 + Math.floor(10 + Math.random() * 4), Users: m.Users + Math.floor(80 + Math.random() * 40), FixCosts: m.FixCosts + Math.floor(600 + Math.random() * 400) }), successChance: 0.7 },
    //{ title: '–ü–æ–∫—É–ø–∫–∞ –ª–∏–¥–æ–≤', description: 'Users +800, C1 -15%', apply: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(600 + Math.random() * 400), C1: m.C1 - Math.floor(12 + Math.random() * 6) }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, CPUser: m.CPUser + Math.floor(2 + Math.random() * 2) }), message: '–†–∏—Å–∫ —Å–ø–∞–º–∞ ‚Üí CPUser +$2-4.' } },
    //{ title: 'Email-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥', description: 'Users +200, C1 +8%', apply: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(150 + Math.random() * 100), C1: m.C1 + Math.floor(6 + Math.random() * 4) }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, C1: m.C1 - Math.floor(4 + Math.random() * 3) }), message: '–ß–∞—Å—Ç—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏ ‚Üí C1 -4-7%.' } },
    //{ title: '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞', description: 'Users +300 (SEO-—Ç—Ä–∞—Ñ–∏–∫)', apply: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(200 + Math.random() * 200) }), successChance: 0.7 },
 // ],
  product: // —É–º–µ–Ω—å—à–∏—Ç—å –ø–æ –∫–æ–≥—Å—É –∏ —Ü–µ–Ω–µ –Ω–∞ 1-3   (–µ—â–µ –ø–æ–¥—É–º–∞—Ç—å 20 –∏ 15 —Å–¥–µ–∞–ª–∞—Ç—å)
  [
    
      // –ù–æ–≤—ã–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã –ø–æ —Å–Ω–∏–∂–µ–Ω–∏—é COGS
      { title: '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç –ò–ò —á–µ—Ä–µ–∑ CD–ù', description: 'COGS -$7', apply: m => recalcMetrics({...m, COGS: Math.max(m.COGS - 7, 1)}), successChance: 0.65 },
      { title: '–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö API –∏ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤', description: 'COGS -$10', apply: m => recalcMetrics({...m, COGS: Math.max(m.COGS - 10, 1), AvPrice: m.AvPrice + 0}), successChance: 0.8 },
      { title: '–°–∂–∞—Ç–∏–µ –¥–∞–Ω–Ω—ã—Ö: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ Brotli –¥–ª—è –ø–∏—Å–µ–º –∏ –≤–ª–æ–∂–µ–Ω–∏–π', description: 'COGS -$4', apply: m => recalcMetrics({...m, COGS: Math.max(m.COGS - 4, 1), C1: Math.min(Math.round(m.C1 * 1.0), 100)}), successChance: 0.75 },
      { title: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É', description: 'COGS -$3', apply: m => recalcMetrics({...m, COGS: Math.max(m.COGS - 3, 1), FixCosts: m.FixCosts + 0}), successChance: 0.6 },
      { title: '–ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ø–∏—Å—å–º–∞ –≤ –±–æ–ª–µ–µ –¥–µ—à–µ–≤—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞', description: 'COGS -$5', apply: m => recalcMetrics({...m, COGS: Math.max(m.COGS - 5, 1), FixCosts: m.FixCosts + 0}), successChance: 0.6 },
  
      // –û—Å—Ç–∞–ª—å–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è COGS)
      { title: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–¥–µ–ª–∏ —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç–∏ –∫ —Ç–∞—Ä–∏—Ñ–∞–º –Ω–∞ –Ω–µ–∫—É–ø–∏–≤—à—É—é –±–∞–∑—É', description: 'AvPrice +$5, C1 +18%(–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, AvPrice: m.AvPrice + 5, C1: Math.min(Math.round(m.C1 * 1.18), 100)}), successChance: 0.67 },
      { title: '–†–∞—Å—à–∏—Ä–∏—Ç—å —Ñ–∏—á–∏ –≤ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–µ', description: 'C1 +18%(–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, C1: Math.min(Math.round(m.C1 * 1.08), 100), COGS: Math.max(m.COGS + 0, 1)}), successChance: 0.63 },
      { title: '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–∞—Ä–∏—Ñ—ã (–ø–æ —Å–µ–≥–º–µ–Ω—Ç–∞–º –∏ –ø–µ—Ä–∏–æ–¥–∞–º)', description: 'C1 +8%(–æ—Ç–Ω.), AvPrice +$5', apply: m => recalcMetrics({...m, C1: Math.min(Math.round(m.C1 * 1.08), 100), AvPrice: m.AvPrice + 5}), successChance: 0.7 },
      { title: '–£–ª—É—á—à–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å –Ω–∏–∑–∫–∏–º CSI', description: 'AvPrice +$2, C1 +2%(–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, AvPrice: m.AvPrice + 2, C1: Math.min(Math.round(m.C1 * 1.02), 100)}), successChance: 0.67 },
      { title: '–î–æ—Ä–∞–±–æ—Ç–∞—Ç—å –º–µ—Ö–∞–Ω–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —É—Å–∏–ª–∏–≤–∞—é—Ç —Å–≤—è–∑—å —Å –∞—Ä—Ö–µ—Ç–∏–ø–æ–º –±—Ä–µ–Ω–¥–∞', description: 'AvPrice +$10, C1 +15%(–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, AvPrice: m.AvPrice + 10, C1: Math.min(Math.round(m.C1 * 1.15), 100)}), successChance: 0.67 },
  
      // –î–∏–∑—Ä–∞–ø—Ç –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã
      { title: 'üî• –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂–∏ —á–µ—Ä–µ–∑ –ø–æ—á—Ç—É', description: 'AvPrice +$30, Users +1500', apply: m => recalcMetrics({...m, AvPrice: m.AvPrice + 30, Users: m.Users + 1500}), successChance: 0.75 }
  
  ],
/*
  [
    { title: '–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –ò–ò-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏', description: 'COGS -$4, AvPrice +$10', apply: m => recalcMetrics({ ...m, COGS: m.COGS - 4, AvPrice: m.AvPrice + 10 }), successChance: 0.7, partialEffect: m => recalcMetrics({ ...m, COGS: m.COGS - Math.floor(1 + Math.random() * 2) }), risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, COGS: m.COGS + Math.floor(2 + Math.random() * 2) }), message: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–±–æ–π ‚Üí COGS +$2-4.' } },
    { title: '–ü—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∞', description: 'AvPrice +$25, C1 -6%', apply: m => recalcMetrics({ ...m, AvPrice: m.AvPrice + 25, C1: m.C1 - 6 }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, Users: m.Users - Math.floor(80 + Math.random() * 40) }), message: '–ù–∏–∑–∫–∏–π NPS ‚Üí Users -80-120.' } },
    { title: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏', description: 'COGS -$3, C1 +5%', apply: m => recalcMetrics({ ...m, COGS: m.COGS - 3, C1: m.C1 + 5 }), successChance: 0.7, risk: { chance: 0.2, effect: m => m, message: 'NPS -7 (—Ä–æ–±–æ—Ç –Ω–µ —Å–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è).' } },
    { title: '–ù–æ–≤–∞—è —Ñ–∏—á–∞ "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"', description: 'AvPrice +$20, C1 +8%', apply: m => recalcMetrics({ ...m, AvPrice: m.AvPrice + 20, C1: m.C1 + 8 }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, COGS: m.COGS + Math.floor(4 + Math.random() * 2) }), message: '–ó–∞–¥–µ—Ä–∂–∫–∞ —Ä–µ–ª–∏–∑–∞ ‚Üí COGS +$4-6.' } },
    { title: '–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å –æ–±–ª–∞—á–Ω—ã–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º', description: 'COGS -$5', apply: m => recalcMetrics({ ...m, COGS: m.COGS - 5 }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, FixCosts: m.FixCosts + Math.floor(150 + Math.random() * 100) }), message: '–†–∏—Å–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ‚Üí FixCosts +$150-250.' } },
    { title: '–£–ª—É—á—à–µ–Ω–∏–µ UI/UX', description: 'C1 +10%, AvPrice +$8', apply: m => recalcMetrics({ ...m, C1: m.C1 + 10, AvPrice: m.AvPrice + 8 }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, C1: m.C1 - Math.floor(3 + Math.random() * 3) }), message: '–û—à–∏–±–∫–∏ ‚Üí C1 -3-6%.' } },
    { title: '–ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞', description: 'COGS +$3, C1 +7%', apply: m => recalcMetrics({ ...m, COGS: m.COGS + 3, C1: m.C1 + 7 }), successChance: 0.7 },
    { title: '–°–Ω–∏–∂–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤ –¥–ª—è –Ω–æ–≤—ã—Ö', description: 'Users +400, AvPrice -$8', apply: m => recalcMetrics({ ...m, Users: m.Users + 400, AvPrice: m.AvPrice - 8 }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, Margin: m.Margin - (0.06 + Math.random() * 0.04) }), message: 'Margin –ø–∞–¥–∞–µ—Ç –Ω–∞ 6-10%.' } },
    { title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —É–º–Ω—ã–º –¥–æ–º–æ–º', description: 'AvPrice +$30', apply: m => recalcMetrics({ ...m, AvPrice: m.AvPrice + 30 }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, COGS: m.COGS + Math.floor(3 + Math.random() * 2) }), message: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –±–∞–≥–∏ ‚Üí COGS +$3-5.' } },
    { title: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–æ–≤', description: 'COGS -$6', apply: m => recalcMetrics({ ...m, COGS: m.COGS - 6 }), successChance: 0.7, risk: { chance: 0.2, effect: m => m, message: 'NPS -10.' } },
],

  
  [
    { title: '–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –ò–ò-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏', description: 'COGS -$4, AvPrice +$10', apply: m => recalcMetrics({ ...m, COGS: m.COGS - Math.floor(3 + Math.random() * 2), AvPrice: m.AvPrice + Math.floor(8 + Math.random() * 4) }), successChance: 0.7, partialEffect: m => recalcMetrics({ ...m, COGS: m.COGS - Math.floor(1 + Math.random() * 2) }), risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, COGS: m.COGS + Math.floor(2 + Math.random() * 2) }), message: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–±–æ–π ‚Üí COGS +$2-4.' } },
    { title: '–ü—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∞', description: 'AvPrice +$25, C1 -6%', apply: m => recalcMetrics({ ...m, AvPrice: m.AvPrice + Math.floor(20 + Math.random() * 10), C1: m.C1 - Math.floor(4 + Math.random() * 4) }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, Users: m.Users - Math.floor(80 + Math.random() * 40) }), message: '–ù–∏–∑–∫–∏–π NPS ‚Üí Users -80-120.' } },
    { title: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏', description: 'COGS -$3, C1 +5%', apply: m => recalcMetrics({ ...m, COGS: m.COGS - Math.floor(2 + Math.random() * 2), C1: m.C1 + Math.floor(4 + Math.random() * 2) }), successChance: 0.7, risk: { chance: 0.2, effect: m => m, message: 'NPS -7 (—Ä–æ–±–æ—Ç –Ω–µ —Å–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è).' } },
    { title: '–ù–æ–≤–∞—è —Ñ–∏—á–∞ "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"', description: 'AvPrice +$20, C1 +8%', apply: m => recalcMetrics({ ...m, AvPrice: m.AvPrice + Math.floor(15 + Math.random() * 10), C1: m.C1 + Math.floor(6 + Math.random() * 4) }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, COGS: m.COGS + Math.floor(4 + Math.random() * 2) }), message: '–ó–∞–¥–µ—Ä–∂–∫–∞ —Ä–µ–ª–∏–∑–∞ ‚Üí COGS +$4-6.' } },
    { title: '–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å –æ–±–ª–∞—á–Ω—ã–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º', description: 'COGS -$5', apply: m => recalcMetrics({ ...m, COGS: m.COGS - Math.floor(4 + Math.random() * 2) }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, FixCosts: m.FixCosts + Math.floor(150 + Math.random() * 100) }), message: '–†–∏—Å–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ‚Üí FixCosts +$150-250.' } },
    { title: '–£–ª—É—á—à–µ–Ω–∏–µ UI/UX', description: 'C1 +10%, AvPrice +$8', apply: m => recalcMetrics({ ...m, C1: m.C1 + Math.floor(8 + Math.random() * 4), AvPrice: m.AvPrice + Math.floor(6 + Math.random() * 4) }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, C1: m.C1 - Math.floor(3 + Math.random() * 3) }), message: '–û—à–∏–±–∫–∏ ‚Üí C1 -3-6%.' } },
    { title: '–ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞', description: 'COGS +$3, C1 +7%', apply: m => recalcMetrics({ ...m, COGS: m.COGS + Math.floor(2 + Math.random() * 2), C1: m.C1 + Math.floor(5 + Math.random() * 4) }), successChance: 0.7 },
    { title: '–°–Ω–∏–∂–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤ –¥–ª—è –Ω–æ–≤—ã—Ö', description: 'Users +400, AvPrice -$8', apply: m => recalcMetrics({ ...m, Users: m.Users + Math.floor(300 + Math.random() * 200), AvPrice: m.AvPrice - Math.floor(6 + Math.random() * 4) }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, Margin: m.Margin - (0.06 + Math.random() * 0.04) }), message: 'Margin –ø–∞–¥–∞–µ—Ç –Ω–∞ 6-10%.' } },
    { title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —É–º–Ω—ã–º –¥–æ–º–æ–º', description: 'AvPrice +$30', apply: m => recalcMetrics({ ...m, AvPrice: m.AvPrice + Math.floor(25 + Math.random() * 10) }), successChance: 0.7, risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, COGS: m.COGS + Math.floor(3 + Math.random() * 2) }), message: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –±–∞–≥–∏ ‚Üí COGS +$3-5.' } },
    { title: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–æ–≤', description: 'COGS -$6', apply: m => recalcMetrics({ ...m, COGS: m.COGS - Math.floor(5 + Math.random() * 2) }), successChance: 0.7, risk: { chance: 0.2, effect: m => m, message: 'NPS -10.' } },
  ],

  */
  onboarding:  // –¥–æ–±–∞–≤–∏—Ç—å –∫–∏–ª–ª–µ—Ä —Ñ–∏—á—É
  [
    // –í—ã—Å–æ–∫–æ—Ä–∏—Å–∫–æ–≤—ã–µ —Å –º–∞–∫—Å. —ç—Ñ—Ñ–µ–∫—Ç–æ–º (140%)
    { title: '–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ–≥–º–µ–Ω—Ç–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–µ–º–æ', description: 'C1 +35% (–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, C1: Math.min(Math.round(m.C1 * 1.35), 100)}), successChance: 0.62 },

    // –°–∏–ª—å–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã (100-130%)
    { title: 'üî• –í–Ω–µ–¥—Ä–∏—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∫–≤–∏–∑-–æ–Ω–±–æ—Ä–¥–∏–Ω–≥', description: 'C1 +80% (–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, C1: Math.min(Math.round(m.C1 * 1.80), 100)}), successChance: 0.68, risk: { chance: 0.3, effect: m => recalcMetrics({...m, Users: m.Users - 400}), message: '–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∫–≤–∏–∑ ‚Üí Users -400' } },
    { title: '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', description: 'C1 +25% (–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, C1: Math.min(Math.round(m.C1 * 1.25), 100)}), successChance: 0.55 },

    // –°—Ä–µ–¥–Ω–∏–π —ç—Ñ—Ñ–µ–∫—Ç (80-100%)
    { title: '–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏', description: 'C1 +30% (–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, C1: Math.min(Math.round(m.C1 * 1.30), 100)}), successChance: 0.65 },
    { title: '–í–Ω–µ–¥—Ä–∏—Ç—å —Å–æ—Ü–∏–∞–ª—å–Ω–æ–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ', description: 'C1 +60% (–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, C1: Math.min(Math.round(m.C1 * 1.6), 100)}), successChance: 0.68 },

    // –ë–∞–∑–æ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è (50-80%)
    { title: '–í–Ω–µ–¥—Ä–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞', description: 'C1 +20% (–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, C1: Math.min(Math.round(m.C1 * 1.20), 100)}), successChance: 0.9 },
    { title: '–î–æ–±–∞–≤–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é Aha-moment', description: 'C1 +40% (–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, C1: Math.min(Math.round(m.C1 * 1.40), 100)}), successChance: 0.55 },

    // –ù–∏–∑–∫–∏–π —Ä–∏—Å–∫/—É–º–µ—Ä–µ–Ω–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç (30-50%)
    { title: '–í–Ω–µ–¥—Ä–∏—Ç—å "–∂–∏–≤—ã–µ" —Ç–µ–≥–∏ —Ñ—É–Ω–∫—Ü–∏–π', description: 'C1 +25% (–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, C1: Math.min(Math.round(m.C1 * 1.25), 100)}), successChance: 0.7 },
    { title: '–ó–∞–ø—É—Å—Ç–∏—Ç—å —á–∞—Ç-–±–æ—Ç–∞ –¥–ª—è FAQ', description: 'C1 +15% (–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, C1: Math.min(Math.round(m.C1 * 1.15), 100)}), successChance: 0.72 },

    // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç (20%)
    { title: 'üî• –í–Ω–µ–¥—Ä–∏—Ç—å —à–∞–±–ª–æ–Ω—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞', description: 'C1 +120% (–æ—Ç–Ω.)', apply: m => recalcMetrics({...m, C1: Math.min(Math.round(m.C1 * 2.20), 100)}), successChance: 0.8 }
],
  admin: [


   // { title: '–ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏', description: 'FixCosts -$800', apply: m => recalcMetrics({ ...m, FixCosts: m.FixCosts - Math.floor(600 + Math.random() * 400) }), successChance: 0.85, partialEffect: m => recalcMetrics({ ...m, FixCosts: m.FixCosts - Math.floor(200 + Math.random() * 100) }), risk: { chance: 0.2, effect: m => recalcMetrics({ ...m, FixCosts: m.FixCosts + Math.floor(800 + Math.random() * 400) }), message: '–†–∏—Å–∫ –æ—à–∏–±–æ–∫ ‚Üí –®—Ç—Ä–∞—Ñ $800-1200.' } },
    
   
    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç (20000)
    { title: '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –∞—É—Ç—Å–æ—Ä—Å–∏–Ω–≥ —é—Ä. —É—Å–ª—É–≥', description: 'FixCosts -$20000', apply: m => recalcMetrics({...m, FixCosts: Math.max(m.FixCosts - 20000, 1000)}), successChance: 0.3, risk: { chance: 0.4, effect: m => recalcMetrics({...m, COGS: m.COGS + 5000}), message: '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ ‚Üí COGS +$5000' }},

    // –í—ã—Å–æ–∫–∏–π —ç—Ñ—Ñ–µ–∫—Ç (—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ì–∞—É—Å—Å–∞)
    { title: '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∞—Ä–µ–Ω–¥–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏', description: 'FixCosts -$15000', apply: m => recalcMetrics({...m, FixCosts: Math.max(m.FixCosts - 15000, 1000)}), successChance: 0.55, risk: { chance: 0.35, effect: m => recalcMetrics({...m, Users: m.Users - 500}), message: '–£—Ö—É–¥—à–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ ‚Üí Users -500' }},
    { title: '–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ—Ç–¥–µ–ª—ã –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç', description: 'FixCosts -$11000', apply: m => recalcMetrics({...m, FixCosts: Math.max(m.FixCosts - 11000, 1000)}), successChance: 0.65, risk: { chance: 0.4, effect: m => recalcMetrics({...m, C1: Math.round(m.C1 * 0.90)}), message: '–ü–æ—Ç–µ—Ä—è –∫–æ–Ω—Ç—Ä–æ–ª—è ‚Üí C1 -10%' }},

    // –°—Ä–µ–¥–Ω–∏–π —ç—Ñ—Ñ–µ–∫—Ç
    { title: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç', description: 'FixCosts -$7500', apply: m => recalcMetrics({...m, FixCosts: Math.max(m.FixCosts - 7500, 1000)}), successChance: 0.75 },
    { title: '–ü—Ä–æ–≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã –æ —Ç–∞—Ä–∏—Ñ–∞—Ö pay-as-you-go', description: 'FixCosts -$4800', apply: m => recalcMetrics({...m, FixCosts: Math.max(m.FixCosts - 4800, 1000)}), successChance: 0.6 },

    // –ù–∏–∑–∫–∏–π —ç—Ñ—Ñ–µ–∫—Ç
    { title: '–°–æ–∫—Ä–∞—Ç–∏—Ç—å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', description: 'FixCosts -$3200', apply: m => recalcMetrics({...m, FixCosts: Math.max(m.FixCosts - 3200, 1000)}), successChance: 0.7 },
    { title: '–ü–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –±–∏–ª–ª–∏–Ω–≥–∞', description: 'FixCosts -$2100', apply: m => recalcMetrics({...m, FixCosts: Math.max(m.FixCosts - 2100, 1000)}), successChance: 0.68 },

    // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç (900)
    { title: '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Ñ—Ç-–ª–∏—Ü–µ–Ω–∑–∏–∏', description: 'FixCosts -$900', apply: m => recalcMetrics({...m, FixCosts: Math.max(m.FixCosts - 900, 1000)}), successChance: 0.8 }
],
};

function recalcMetrics(m: Metrics): Metrics {
  const Margin = (m.AvPrice - m.COGS) / m.AvPrice;
  const AMPPU = m.AvPrice - m.COGS;
  const AMPU = AMPPU * (m.C1 / 100);
  const Profit = (AMPU - m.CPUser) * m.Users;  // –ò–∑–º–µ–Ω–µ–Ω–æ: —Ç–µ–ø–µ—Ä—å —É—á–∏—Ç—ã–≤–∞–µ–º CPUser –≤ —Ä–∞—Å—á–µ—Ç–µ –ø—Ä–∏–±—ã–ª–∏
  const ProfitNet = Profit - m.FixCosts;
  return { ...m, Margin, AMPPU, AMPU, Profit, ProfitNet };
}

type OnboardingStep = {
  title: string;
  content: React.ReactNode;
};

const ONBOARDING_STEPS: OnboardingStep[] = [
  {
    title: "AI Mail Master: –†–µ–≤–æ–ª—é—Ü–∏—è —Ä–∞–±–æ—á–∏—Ö –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π",
    content: (
      <div style={{ fontSize: 16, lineHeight: 1.6 }}>
        <p>–í—ã ‚Äî CEO —Å—Ç–∞—Ä—Ç–∞–ø–∞ FutureInbox, —Å–æ–∑–¥–∞—é—â–µ–≥–æ –ø–µ—Ä–≤—ã–π –ò–ò-–ø–æ—á—Ç–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å —É—Ä–æ–≤–Ω—è SuperHuman –¥–ª—è –±–∏–∑–Ω–µ—Å–∞.</p>
        <p>–í–∞—à –ø—Ä–æ–¥—É–∫—Ç ‚Äî InboxMind ‚Äî —ç—Ç–æ –Ω–µ –∫–ª–∏–µ–Ω—Ç –¥–ª—è –ø–∏—Å–µ–º, –∞ —Ü–∏—Ñ—Ä–æ–≤–æ–π —Å–µ–∫—Ä–µ—Ç–∞—Ä—å —Å –ò–ò, –∫–æ—Ç–æ—Ä—ã–π:</p>
        <ul style={{ listStyle: 'none', padding: 0 }}>
          <li>‚úâÔ∏è <b>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Ä—É—Ç–∏–Ω—É:</b> —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–∏—Å—å–º–∞, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç—ã, –≤—ã–¥–µ–ª—è–µ—Ç —Å—Ä–æ—á–Ω—ã–µ –∑–∞–¥–∞—á–∏</li>
          <li>ü§ñ <b>–ü—Ä–µ–¥—É–≥–∞–¥—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è:</b> –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —à–∞–±–ª–æ–Ω—ã, –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö, –∏—â–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã</li>
          <li>üíº <b>–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∏–ª—å:</b> –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç —Ç–æ–Ω –ø–∏—Å–µ–º –ø–æ–¥ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é –∫—É–ª—å—Ç—É—Ä—É</li>
          <li>üîí <b>–ó–∞—â–∏—â–∞–µ—Ç –æ—Ç –æ—à–∏–±–æ–∫:</b> –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–∏—Å—å–º–∞ —Å –æ–ø–µ—á–∞—Ç–∫–∞–º–∏ –∏–ª–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏</li>
        </ul>
        <p style={{ fontStyle: 'italic', marginTop: 16 }}>–ù–æ InboxMind –ø–æ–∫–∞ –ª–∏—à—å —á–µ—Ä–Ω–æ–≤–∏–∫ –±—É–¥—É—â–µ–≥–æ. –í–∞—à —Å—Ç–∞—Ä—Ç–∞–ø –±–∞–ª–∞–Ω—Å–∏—Ä—É–µ—Ç –Ω–∞ –≥—Ä–∞–Ω–∏ –ø—Ä–æ–≤–∞–ª–∞...</p>
      </div>
    )
  },
  {
    title: "–ü—Ä–æ–±–ª–µ–º—ã —Å—Ç–∞—Ä—Ç–∞–ø–∞",
    content: (
      <div style={{ fontSize: 16, lineHeight: 1.6 }}>
        <p style={{ fontWeight: 600, marginBottom: 16 }}>–¢–µ–º–Ω—ã–µ —Ç—É—á–∏ –Ω–∞–¥ FutureInbox:</p>
        <div style={{ marginBottom: 16 }}>
          <p style={{ fontWeight: 600, color: '#ef4444' }}>üí∏ –£–±—ã—Ç–∫–∏ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞:</p>
          <p>COGS = $15 (—Å–µ—Ä–≤–µ—Ä—ã –ò–ò + —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ) –ø—Ä–∏ —Ü–µ–Ω–µ –ø–æ–¥–ø–∏—Å–∫–∏ $20</p>
          <p>AMPU = -$3 (–ø–ª–∞—Ç–∏—Ç–µ –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∞ –Ω–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ!)</p>
        </div>
        <div style={{ marginBottom: 16 }}>
          <p style={{ fontWeight: 600, color: '#ef4444' }}>üìâ –ö—Ä–∏–∑–∏—Å –¥–æ–≤–µ—Ä–∏—è:</p>
          <p>–í—Å–µ–≥–æ 500 –∫–æ–º–ø–∞–Ω–∏–π-–∫–ª–∏–µ–Ω—Ç–æ–≤ –ø—Ä–æ—Ç–∏–≤ Outlook –∏ Gmail</p>
          <p>–°–ª–æ–∂–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—É–≥–∞–µ—Ç HR-–¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤</p>
        </div>
        <div>
          <p style={{ fontWeight: 600, color: '#ef4444' }}>‚ò†Ô∏è –£–≥—Ä–æ–∑–∞ –æ—Ç –≥–∏–≥–∞–Ω—Ç–æ–≤:</p>
          <p>Microsoft —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç Copilot –¥–ª—è Outlook. –ß–µ—Ä–µ–∑ 15 –º–µ—Å—è—Ü–µ–≤ –æ–Ω–∏ –∑–∞–¥–∞–≤—è—Ç —Ä—ã–Ω–æ–∫...</p>
        </div>
      </div>
    )
  },
  {
    title: "–í–∞—à–∞ –º–∏—Å—Å–∏—è",
    content: (
      <div style={{ fontSize: 16, lineHeight: 1.6 }}>
        <p style={{ marginBottom: 16 }}>–ó–∞ 15 –º–µ—Å—è—Ü–µ–≤ (—Ö–æ–¥–æ–≤):</p>
        <ul style={{ listStyle: 'none', padding: 0 }}>
          <li style={{ marginBottom: 12 }}>üî• <b>–ò—Å–ø—Ä–∞–≤–∏—Ç—å —ç–∫–æ–Ω–æ–º–∏–∫—É:</b> –°–Ω–∏–∑–∏—Ç—å COGS –¥–æ $5, –ø–æ–¥–Ω—è—Ç—å —Ü–µ–Ω—É –¥–æ $30</li>
          <li style={{ marginBottom: 12 }}>üöÄ <b>–ó–∞—Ö–≤–∞—Ç–∏—Ç—å –Ω–∏—à—É:</b> 50 000 –∫–æ–º–ø–∞–Ω–∏–π - must-have –¥–ª—è –±–∏–∑–Ω–µ—Å–∞</li>
          <li>üíé <b>–°–æ–∑–¥–∞—Ç—å –ª–µ–≥–µ–Ω–¥—É:</b> –°—Ç–∞—Ç—å "ChatGPT –¥–ª—è –¥–µ–ª–æ–≤–æ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏"</li>
        </ul>
        <div style={{ marginTop: 16, padding: 16, background: '#f8fafc', borderRadius: 8 }}>
          <p style={{ fontWeight: 600, marginBottom: 8 }}>–≠—Ç–æ –Ω–µ –∏–≥—Ä–∞ ‚Äî —ç—Ç–æ –≤–æ–π–Ω–∞:</p>
          <ul style={{ listStyle: 'none', padding: 0 }}>
            <li>üé≤ –ö–∞–∂–¥—ã–µ 3 –º–µ—Å—è—Ü–∞ ‚Äî –ø—Ä–æ—Ä—ã–≤ –∏–ª–∏ –∫—Ä–∞—Ö: —É—Ç–µ—á–∫–∏, –±—É–Ω—Ç—ã –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤</li>
            <li>‚ö° –ë–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –∏–Ω–Ω–æ–≤–∞—Ü–∏—è–º–∏ –∏ –≤—ã–∂–∏–≤–∞–Ω–∏–µ–º</li>
            <li>‚è≥ –ì–æ–Ω–∫–∞ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –ø—Ä–æ—Ç–∏–≤ Microsoft</li>
          </ul>
        </div>
      </div>
    )
  },
  {
    title: "–°—Ç–∞—Ä—Ç–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è",
    content: (
      <div style={{ fontSize: 16, lineHeight: 1.6 }}>
        <p style={{ fontWeight: 600, marginBottom: 16 }}>–í—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ –∑–¥–µ—Å—å:</p>
        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 16, marginBottom: 24 }}>
          <div>
            <p>üè¢ <b>–û—Ñ–∏—Å:</b></p>
            <p>–ö–æ–≤–æ—Ä–∫–∏–Ω–≥ —Å –∞—Ä–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–º–∏ GPU-—Å–µ—Ä–≤–µ—Ä–∞–º–∏</p>
          </div>
          <div>
            <p>üë• <b>–ö–æ–º–∞–Ω–¥–∞:</b></p>
            <p>6 —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –Ω–µ–π—Ä–æ–ª–∏–Ω–≥–≤–∏—Å—Ç</p>
          </div>
          <div>
            <p>üí∞ <b>–ë—é–¥–∂–µ—Ç:</b></p>
            <p>$50,000 (–ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞—É–Ω–¥)</p>
          </div>
          <div>
            <p>üìä <b>–ú–µ—Ç—Ä–∏–∫–∏:</b></p>
            <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>
              <li>Users = 500</li>
              <li>AvPrice = $20</li>
              <li>COGS = $15</li>
              <li>AMPU = -$3</li>
            </ul>
          </div>
        </div>
        <div style={{ padding: 16, background: '#f0f9ff', borderRadius: 8, marginBottom: 16 }}>
          <p style={{ fontWeight: 600, color: '#0369a1' }}>üåü –°—Ü–µ–Ω–∞—Ä–∏–π —É—Å–ø–µ—Ö–∞:</p>
          <p>¬´InboxMind –∫—É–ø–∏–ª–∞ Microsoft –∑–∞ $5 –º–ª—Ä–¥. –í–∞—à –ò–ò —Å—Ç–∞–ª —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º –≤ Outlook!¬ª</p>
        </div>
        <div style={{ padding: 16, background: '#fef2f2', borderRadius: 8 }}>
          <p style={{ fontWeight: 600, color: '#dc2626' }}>üíÄ –°—Ü–µ–Ω–∞—Ä–∏–π –ø—Ä–æ–≤–∞–ª–∞:</p>
          <p>¬´–í–∞—à –∫–æ–¥ –ø–æ–≥–ª–æ—Ç–∏–ª–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—å NeuroTech. Case study "–ö–∞–∫ —É–±–∏—Ç—å —Å—Ç–∞—Ä—Ç–∞–ø"¬ª</p>
        </div>
      </div>
    )
  }
];
/*
const ONBOARDING_STEPS: OnboardingStep[] = [
  {
    title: "AI Assistant Empire: –í–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –∫ –ø—Ä–∏–±—ã–ª–∏",
    content: (
      <div style={{ fontSize: 16, lineHeight: 1.6 }}>
        <p>–í—ã ‚Äî CEO —Å—Ç–∞—Ä—Ç–∞–ø–∞ FutureInbox, —Å–æ–∑–¥–∞—é—â–µ–≥–æ –ø–µ—Ä–≤—ã–π –ò–ò-–ø–æ—á—Ç–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å —É—Ä–æ–≤–Ω—è SuperHuman –¥–ª—è –±–∏–∑–Ω–µ—Å–∞.</p>
        <p>–í–∞—à –ø—Ä–æ–¥—É–∫—Ç ‚Äî InboxMind ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–ª–∏–µ–Ω—Ç –¥–ª—è –ø–∏—Å–µ–º, –∞ —Ü–∏—Ñ—Ä–æ–≤–æ–π —Å–µ–∫—Ä–µ—Ç–∞—Ä—å —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π:</p>
        <ul style={{ listStyle: 'none', padding: 0 }}>
          <li>üìÖ –ü–ª–∞–Ω–∏—Ä—É–µ—Ç –¥–µ–ª–∞, –±—Ä–æ–Ω–∏—Ä—É–µ—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –æ –¥–Ω—è—Ö —Ä–æ–∂–¥–µ–Ω–∏—è.</li>
          <li>üõí –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –ø–æ–∫—É–ø–∫–∏, –Ω–∞—Ö–æ–¥—è –ª—É—á—à–∏–µ —Ü–µ–Ω—ã –∏ —ç–∫–æ–Ω–æ–º—è –≤—Ä–µ–º—è –∫–ª–∏–µ–Ω—Ç–æ–≤.</li>
          <li>üéì –û–±—É—á–∞–µ—Ç –Ω–æ–≤—ã–º –Ω–∞–≤—ã–∫–∞–º: –æ—Ç –∫—É–ª–∏–Ω–∞—Ä–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ –¥–æ –æ—Å–Ω–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.</li>
        </ul>
        <p style={{ fontStyle: 'italic', marginTop: 16 }}>–ù–æ VirtuMate –ø–æ–∫–∞ –ª–∏—à—å —Ç–µ–Ω—å —Ç–æ–≥–æ, —á–µ–º –æ–Ω –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å. –í–∞—à —Å—Ç–∞—Ä—Ç–∞–ø –±–∞–ª–∞–Ω—Å–∏—Ä—É–µ—Ç –Ω–∞ –≥—Ä–∞–Ω–∏ –ø—Ä–æ–≤–∞–ª–∞, –∏ —Ç–æ–ª—å–∫–æ –≤–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª—è—Ç, –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—Å—è –ª–∏ –æ–Ω –≤ –º–Ω–æ–≥–æ–º–∏–ª–ª–∏–æ–Ω–Ω—É—é –∏–º–ø–µ—Ä–∏—é –∏–ª–∏ –∫–∞–Ω–µ—Ç –≤ –±–µ–∑–≤–µ—Å—Ç–Ω–æ—Å—Ç—å...</p>
      </div>
    )
  },
  {
    title: "–ü—Ä–æ–±–ª–µ–º—ã —Å—Ç–∞—Ä—Ç–∞–ø–∞",
    content: (
      <div style={{ fontSize: 16, lineHeight: 1.6 }}>
        <p style={{ fontWeight: 600, marginBottom: 16 }}>–¢–µ–º–Ω—ã–µ —Ç—É—á–∏ –Ω–∞–¥ FutureMind:</p>
        <div style={{ marginBottom: 16 }}>
          <p style={{ fontWeight: 600, color: '#ef4444' }}>üí∏ –î—ã—Ä—è–≤—ã–π –∫–æ—à–µ–ª–µ–∫: –ö–∞–∂–¥—ã–π –∫–ª–∏–µ–Ω—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç —É–±—ã—Ç–∫–∏.</p>
          <p>–ü–æ—á–µ–º—É? –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ ¬´—Å—ä–µ–¥–∞–µ—Ç¬ª –¥–µ–Ω—å–≥–∏ (COGS = $15 –ø—Ä–∏ —Ü–µ–Ω–µ –ø–æ–¥–ø–∏—Å–∫–∏ $20).</p>
          <p>–†–µ–∑—É–ª—å—Ç–∞—Ç: AMPU = -$3 (–≤—ã –ø–ª–∞—Ç–∏—Ç–µ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ –Ω–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ!).</p>
        </div>
        <div style={{ marginBottom: 16 }}>
          <p style={{ fontWeight: 600, color: '#ef4444' }}>üï≥ –ü—É—Å—Ç—ã–Ω—è –∫–ª–∏–µ–Ω—Ç–æ–≤: –í—Å–µ–≥–æ 500 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ ‚Äî –∫–∞–ø–ª—è –≤ –º–æ—Ä–µ —Ä—ã–Ω–∫–∞.</p>
          <p>–ü–æ—á–µ–º—É? –†–µ–∫–ª–∞–º–∞ –±—å–µ—Ç –º–∏–º–æ —Ü–µ–ª–∏, –∞ —Å–∞–π—Ç –æ—Ç–ø—É–≥–∏–≤–∞–µ—Ç —Å–ª–æ–∂–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.</p>
        </div>
        <div>
          <p style={{ fontWeight: 600, color: '#ef4444' }}>‚öîÔ∏è –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã –Ω–∞—Å—Ç—É–ø–∞—é—Ç:</p>
          <p>–ö–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≤—Ä–æ–¥–µ NeuroTech —É–∂–µ —Ç–µ—Å—Ç–∏—Ä—É—é—Ç —Å–≤–æ–∏—Ö –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤. –ß–µ—Ä–µ–∑ 15 –º–µ—Å—è—Ü–µ–≤ –æ–Ω–∏ –∑–∞—Ö–≤–∞—Ç—è—Ç —Ä—ã–Ω–æ–∫‚Ä¶ –µ—Å–ª–∏ –≤—ã –Ω–µ —É—Å–ø–µ–µ—Ç–µ.</p>
        </div>
      </div>
    )
  },
  {
    title: "–í–∞—à–∞ –º–∏—Å—Å–∏—è",
    content: (
      <div style={{ fontSize: 16, lineHeight: 1.6 }}>
        <p style={{ marginBottom: 16 }}>–ó–∞ 15 –º–µ—Å—è—Ü–µ–≤ (—Ö–æ–¥–æ–≤) –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ FutureMind –≤ –ø—Ä–∏–±—ã–ª—å–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é —Å –µ–∂–µ–º–µ—Å—è—á–Ω—ã–º –¥–æ—Ö–æ–¥–æ–º ‚â• $50,000.</p>
        <ul style={{ listStyle: 'none', padding: 0 }}>
          <li style={{ marginBottom: 12 }}>üî• <b>–°–æ–∂–≥–∏—Ç–µ —É–±—ã—Ç–∫–∏:</b> –°–¥–µ–ª–∞–π—Ç–µ AMPU –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º, –ø–µ—Ä–µ—Ö–∏—Ç—Ä–∏–≤ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤.</li>
          <li style={{ marginBottom: 12 }}>üöÄ <b>–ü–æ–∫–æ—Ä–∏—Ç–µ –∞—É–¥–∏—Ç–æ—Ä–∏—é:</b> –ü—Ä–∏–≤–ª–µ–∫–∏—Ç–µ –¥–µ—Å—è—Ç–∫–∏ —Ç—ã—Å—è—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–¥–µ–ª–∞–≤ VirtuMate –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º.</li>
          <li>üíé <b>–°–æ–∑–¥–∞–π—Ç–µ –ª–µ–≥–µ–Ω–¥—É:</b> –í–æ–π–¥–∏—Ç–µ –≤ –∏—Å—Ç–æ—Ä–∏—é –∫–∞–∫ CEO, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–≤–µ—Ä–Ω—É–ª —Ä—ã–Ω–æ–∫ –ò–ò!</li>
        </ul>
        <div style={{ marginTop: 16, padding: 16, background: '#f8fafc', borderRadius: 8 }}>
          <p style={{ fontWeight: 600, marginBottom: 8 }}>–≠—Ç–æ –Ω–µ –∏–≥—Ä–∞ –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä. –≠—Ç–æ –±–∏—Ç–≤–∞ –∑–∞ –≤—ã–∂–∏–≤–∞–Ω–∏–µ:</p>
          <ul style={{ listStyle: 'none', padding: 0 }}>
            <li>üé≤ –ö–∞–∂–¥—ã–π –∫–≤–∞—Ä—Ç–∞–ª ‚Äî –º–∏–Ω–∏-—ç–ø–∏–∑–æ–¥ –¥—Ä–∞–º—ã: —Ç–µ—Å—Ç—ã, –ø—Ä–æ—Ä—ã–≤—ã, –ø—Ä–æ–≤–∞–ª—ã.</li>
            <li>‚ö° –†–∏—Å–∫–∏ –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥—É –∏ –º–æ–º–µ–Ω—Ç—ã —Ç—Ä–∏—É–º—Ñ–∞.</li>
            <li>‚è≥ –ì–æ–Ω–∫–∞ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –¥–æ –∑–∞—Ö–≤–∞—Ç–∞ —Ä—ã–Ω–∫–∞ –≥–∏–≥–∞–Ω—Ç–∞–º–∏.</li>
          </ul>
        </div>
      </div>
    )
  },
  {
    title: "–°—Ç–∞—Ä—Ç–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è",
    content: (
      <div style={{ fontSize: 16, lineHeight: 1.6 }}>
        <p style={{ fontWeight: 600, marginBottom: 16 }}>–í—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ –∑–¥–µ—Å—å:</p>
        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 16, marginBottom: 24 }}>
          <div>
            <p>üèöÔ∏è <b>–û—Ñ–∏—Å:</b></p>
            <p>–ì–∞—Ä–∞–∂ —Å —Å–µ—Ä–≤–µ—Ä–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –≥—Ä–µ—é—Ç—Å—è –∫–∞–∫ —Ç–æ—Å—Ç–µ—Ä—ã.</p>
          </div>
          <div>
            <p>üë• <b>–ö–æ–º–∞–Ω–¥–∞:</b></p>
            <p>5 —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥-—Å—Ç—É–¥–µ–Ω—Ç.</p>
          </div>
          <div>
            <p>üí∞ <b>–ë—é–¥–∂–µ—Ç:</b></p>
            <p>$30,000 (–ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–Ω—å–≥–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤).</p>
          </div>
          <div>
            <p>üìä <b>–ú–µ—Ç—Ä–∏–∫–∏:</b></p>
            <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>
              <li>Users = 500</li>
              <li>AvPrice = $40</li>
              <li>COGS = $30</li>
              <li>AMPU = $2</li>
            </ul>
          </div>
        </div>
        <div style={{ padding: 16, background: '#f0f9ff', borderRadius: 8, marginBottom: 16 }}>
          <p style={{ fontWeight: 600, color: '#0369a1' }}>üåü –°—Ü–µ–Ω–∞—Ä–∏–π —É—Å–ø–µ—Ö–∞:</p>
          <p>¬´VirtuMate —Å—Ç–∞–ª –Ω–æ–≤—ã–º iPhone –≤ –º–∏—Ä–µ –ò–ò. –í—ã –ø—Ä–æ–¥–∞–ª–∏ –∫–æ–º–ø–∞–Ω–∏—é –∑–∞ $1 –º–ª—Ä–¥ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Ä–∞–∫–µ—Ç—É –∫ –ú–∞—Ä—Å—É!¬ª</p>
        </div>
        <div style={{ padding: 16, background: '#fef2f2', borderRadius: 8 }}>
          <p style={{ fontWeight: 600, color: '#dc2626' }}>üíÄ –°—Ü–µ–Ω–∞—Ä–∏–π –ø—Ä–æ–≤–∞–ª–∞:</p>
          <p>¬´FutureMind –∫—É–ø–ª–µ–Ω NeuroTech –∑–∞ $1. –í–∞—à–µ –∏–º—è —Å—Ç–∞–ª–æ —Å–∏–Ω–æ–Ω–∏–º–æ–º –ø—Ä–æ–≤–∞–ª–∞ –≤ –ö—Ä–µ–º–Ω–∏–µ–≤–æ–π –¥–æ–ª–∏–Ω–µ‚Ä¶¬ª</p>
        </div>
      </div>
    )
  }

  ];
*/
function VictoryModal({ onRestart }: { onRestart: () => void }) {
  const [show, setShow] = useState(false);

  useEffect(() => {
    setTimeout(() => setShow(true), 100);
  }, []);

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      width: '100%',
      height: '100%',
      background: 'rgba(0,0,0,0.5)',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      zIndex: 1000
    }}>
      <div style={{
        background: 'white',
        padding: '32px',
        borderRadius: '24px',
        maxWidth: '500px',
        width: '90%',
        textAlign: 'center',
        transform: show ? 'scale(1)' : 'scale(0.9)',
        opacity: show ? 1 : 0,
        transition: 'all 0.5s ease-out',
        boxShadow: '0 8px 32px rgba(0,0,0,0.12)'
      }}>
        <div style={{ fontSize: '64px', marginBottom: '24px' }}>üéâ</div>
        <h2 style={{ 
          fontSize: '24px', 
          marginBottom: '16px',
          background: 'linear-gradient(135deg, #000000 0%, #333333 100%)',
          WebkitBackgroundClip: 'text',
          WebkitTextFillColor: 'transparent',
          fontWeight: 700
        }}>
          –ü–æ–±–µ–¥–∞!
        </h2>
        <p style={{ fontSize: '16px', marginBottom: '24px', color: '#6b7280' }}>
          –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª–∏ InboxMind –≤ –ø—Ä–∏–±—ã–ª—å–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é!
        </p>
        <div style={{ 
          display: 'flex', 
          flexDirection: 'column', 
          gap: '12px',
          marginBottom: '24px'
        }}>
          <div style={{ 
            padding: '12px', 
            background: 'linear-gradient(135deg, #000000 0%, #333333 100%)', 
            borderRadius: '8px',
            color: 'white'
          }}>
            üöÄ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ —Ü–µ–ª—å: Profit Net ‚â• $50,000
          </div>
          <div style={{ 
            padding: '12px', 
            background: 'linear-gradient(135deg, #000000 0%, #333333 100%)', 
            borderRadius: '8px',
            color: 'white'
          }}>
            üíé –ö–æ–º–ø–∞–Ω–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—é
          </div>
          <div style={{ 
            padding: '12px', 
            background: 'linear-gradient(135deg, #000000 0%, #333333 100%)', 
            borderRadius: '8px',
            color: 'white'
          }}>
            üèÜ –í—ã —Å—Ç–∞–ª–∏ –ª–µ–≥–µ–Ω–¥–æ–π –ö—Ä–µ–º–Ω–∏–µ–≤–æ–π –¥–æ–ª–∏–Ω—ã
          </div>
        </div>
        <button
          onClick={onRestart}
          style={{
            background: 'linear-gradient(135deg, #000000 0%, #333333 100%)',
            color: 'white',
            border: 'none',
            padding: '12px 24px',
            borderRadius: '12px',
            fontSize: '16px',
            cursor: 'pointer',
            fontWeight: 500,
            width: '100%',
            transition: 'transform 0.2s ease, opacity 0.2s ease'
          }}
          onMouseEnter={e => e.currentTarget.style.opacity = '0.9'}
          onMouseLeave={e => e.currentTarget.style.opacity = '1'}
        >
          –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É
        </button>
      </div>
    </div>
  );
}

function DefeatModal({ onRestart }: { onRestart: () => void }) {
  const [show, setShow] = useState(false);

  useEffect(() => {
    setTimeout(() => setShow(true), 100);
  }, []);

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      width: '100%',
      height: '100%',
      background: 'rgba(0, 0, 0, 0.5)',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      zIndex: 1000
    }}>
      <div style={{
        background: 'white',
        padding: '32px',
        borderRadius: '24px',
        maxWidth: '500px',
        width: '90%',
        textAlign: 'center',
        transform: show ? 'translateY(0)' : 'translateY(100vh)',
        opacity: show ? 1 : 0,
        transition: 'all 0.5s ease-out',
        boxShadow: '0 8px 32px rgba(0,0,0,0.12)'
      }}>
        <div style={{ fontSize: '64px', marginBottom: '24px' }}>üòî</div>
        <h2 style={{ fontSize: '24px', marginBottom: '16px', color: '#1f2937' }}>–ù–µ –≤ —ç—Ç–æ—Ç —Ä–∞–∑...</h2>
        <p style={{ fontSize: '16px', marginBottom: '24px', color: '#6b7280' }}>
          –ù–æ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —Ü–µ–Ω–Ω—ã–π –æ–ø—ã—Ç! –¢–µ–ø–µ—Ä—å –≤—ã –∑–Ω–∞–µ—Ç–µ –±–æ–ª—å—à–µ –æ:
        </p>
        <div style={{ 
          display: 'flex', 
          flexDirection: 'column', 
          gap: '12px',
          marginBottom: '24px'
        }}>
          <div style={{ 
            padding: '12px', 
            background: '#f3f4f6', 
            borderRadius: '8px',
            color: '#4b5563'
          }}>
            üìà –£–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞
          </div>
          <div style={{ 
            padding: '12px', 
            background: '#f3f4f6', 
            borderRadius: '8px',
            color: '#4b5563'
          }}>
            üí° –ü—Ä–∏–Ω—è—Ç–∏–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π
          </div>
          <div style={{ 
            padding: '12px', 
            background: '#f3f4f6', 
            borderRadius: '8px',
            color: '#4b5563'
          }}>
            üéØ –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–µ —Ä–∏—Å–∫–æ–≤ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
          </div>
        </div>
        <button
          onClick={onRestart}
          style={{
            background: 'linear-gradient(90deg, #3b82f6, #8b5cf6)',
            color: 'white',
            border: 'none',
            padding: '12px 24px',
            borderRadius: '8px',
            fontSize: '16px',
            cursor: 'pointer',
            width: '100%'
          }}
        >
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑
        </button>
      </div>
    </div>
  );
}

type Achievement = {
  id: string;
  title: string;
  description: string;
  icon: string;
  condition: (metrics: Metrics, prevMetrics: Metrics | null, turn: number) => boolean;
  achieved?: boolean;
};

const ACHIEVEMENTS: Achievement[] = [
  {
    id: 'first_profit',
    title: '–ü–µ—Ä–≤–∞—è –ø—Ä–∏–±—ã–ª—å',
    description: '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ Profit Net',
    icon: 'üí∞',
    condition: (m) => m.ProfitNet > 0
  },
  {
    id: 'users_1000',
    title: '–†–∞—Å—Ç—É—â–µ–µ –∫–æ–º—å—é–Ω–∏—Ç–∏',
    description: '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 1000 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
    icon: 'üë•',
    condition: (m) => m.Users >= 1000
  },
  {
    id: 'users_5000',
    title: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç',
    description: '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 5000 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
    icon: 'üåü',
    condition: (m) => m.Users >= 5000
  },
  {
    id: 'margin_50',
    title: '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –±–∏–∑–Ω–µ—Å',
    description: '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ 50%',
    icon: 'üìà',
    condition: (m) => m.Margin >= 0.5
  },
  {
    id: 'profit_10k',
    title: '–ü—É—Ç—å –∫ —É—Å–ø–µ—Ö—É',
    description: '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ Profit Net $10,000',
    icon: 'üíé',
    condition: (m) => m.ProfitNet >= 10000
  },
  {
    id: 'profit_25k',
    title: '–£–≤–µ—Ä–µ–Ω–Ω—ã–π —Ä–æ—Å—Ç',
    description: '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ Profit Net $25,000',
    icon: 'üöÄ',
    condition: (m) => m.ProfitNet >= 25000
  },
  {
    id: 'c1_40',
    title: '–ú–∞—Å—Ç–µ—Ä –∫–æ–Ω–≤–µ—Ä—Å–∏–∏',
    description: '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ 40%',
    icon: 'üéØ',
    condition: (m) => m.C1 >= 40
  },
  {
    id: 'low_costs',
    title: '–û–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä',
    description: '–°–Ω–∏–∑—å—Ç–µ COGS –Ω–∞ 30% –æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è',
    icon: '‚úÇÔ∏è',
    condition: (m) => m.COGS <= 10.5 // 30 * 0.7
  },
  {
    id: 'quick_growth',
    title: '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç',
    description: '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 2000 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –ø–µ—Ä–≤—ã–µ 5 —Ö–æ–¥–æ–≤',
    icon: '‚ö°',
    condition: (m, _, turn) => m.Users >= 2000 && turn <= 5
  },
  {
    id: 'perfect_balance',
    title: '–ò–¥–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å',
    description: '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤–æ –≤—Å–µ—Ö –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫–∞—Ö',
    icon: '‚öñÔ∏è',
    condition: (m) => m.ProfitNet > 0 && m.AMPU > 0 && m.Margin > 0 && m.C1 > 20
  }
];

function AchievementNotification({ achievement, onClose }: { achievement: Achievement; onClose: () => void }) {
  const [show, setShow] = useState(false);

  useEffect(() => {
    setShow(true);
    const timer = setTimeout(() => {
      setShow(false);
      setTimeout(onClose, 300);
    }, 3000);
    return () => clearTimeout(timer);
  }, [onClose]);

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      width: '100%',
      height: '100%',
      background: 'rgba(0,0,0,0.5)',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      zIndex: 1000,
      opacity: show ? 1 : 0,
      transition: 'opacity 0.3s ease'
    }}>
      <div style={{
        background: 'white',
        padding: '32px',
        borderRadius: '24px',
        maxWidth: '400px',
        width: '90%',
        textAlign: 'center',
        transform: show ? 'scale(1)' : 'scale(0.9)',
        transition: 'transform 0.3s ease',
        boxShadow: '0 8px 32px rgba(0,0,0,0.12)'
      }}>
        <div style={{ fontSize: '64px', marginBottom: '24px' }}>üéä</div>
        <h3 style={{ 
          fontSize: '24px', 
          marginBottom: '24px',
          background: 'linear-gradient(135deg, #000000 0%, #333333 100%)',
          WebkitBackgroundClip: 'text',
          WebkitTextFillColor: 'transparent',
          fontWeight: 700
        }}>
          –í–∞—à–µ –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!
        </h3>
        <div style={{
          padding: '24px',
          borderRadius: '16px',
          background: 'linear-gradient(135deg, #000000 0%, #333333 100%)',
          color: 'white',
          marginBottom: '24px'
        }}>
          <div style={{ fontSize: '32px', marginBottom: '12px' }}>
            {achievement.icon}
          </div>
          <div style={{ 
            fontWeight: 600, 
            marginBottom: '8px',
            fontSize: '18px'
          }}>
            {achievement.title}
          </div>
          <div style={{ 
            fontSize: '14px',
            opacity: 0.8
          }}>
            {achievement.description}
          </div>
        </div>
        <button
          onClick={() => {
            setShow(false);
            setTimeout(onClose, 300);
          }}
          style={{
            background: 'linear-gradient(135deg, #000000 0%, #333333 100%)',
            color: 'white',
            border: 'none',
            padding: '12px 24px',
            borderRadius: '12px',
            fontSize: '16px',
            cursor: 'pointer',
            fontWeight: 500,
            width: '100%',
            transition: 'transform 0.2s ease, opacity 0.2s ease'
          }}
          onMouseEnter={e => e.currentTarget.style.opacity = '0.9'}
          onMouseLeave={e => e.currentTarget.style.opacity = '1'}
        >
          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
        </button>
      </div>
    </div>
  );
}

function AchievementsModal({ achievements, onClose }: { achievements: Achievement[]; onClose: () => void }) {
  const [show, setShow] = useState(false);

  useEffect(() => {
    setShow(true);
  }, []);

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      width: '100%',
      height: '100%',
      background: 'rgba(0,0,0,0.5)',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      zIndex: 1000
    }}>
      <div style={{
        background: 'white',
        padding: '32px',
        borderRadius: '24px',
        maxWidth: '600px',
        width: '90%',
        maxHeight: '90vh',
        overflow: 'auto',
        transform: show ? 'scale(1)' : 'scale(0.9)',
        opacity: show ? 1 : 0,
        transition: 'all 0.3s ease'
      }}>
        <div style={{ 
          display: 'flex', 
          justifyContent: 'space-between', 
          alignItems: 'center',
          marginBottom: '24px'
        }}>
          <h2 style={{ margin: 0, fontSize: '24px' }}>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h2>
          <button
            onClick={onClose}
            style={{
              background: 'none',
              border: 'none',
              fontSize: '24px',
              cursor: 'pointer',
              padding: '8px'
            }}
          >
            ‚úï
          </button>
        </div>
        <div style={{ 
          display: 'grid', 
          gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',
          gap: '16px'
        }}>
          {achievements.map(achievement => (
            <div
              key={achievement.id}
              style={{
                padding: '16px',
                borderRadius: '16px',
                background: achievement.achieved ? 'linear-gradient(135deg, #000000 0%, #333333 100%)' : '#f5f5f7',
                color: achievement.achieved ? 'white' : '#1d1d1f',
                opacity: achievement.achieved ? 1 : 0.7
              }}
            >
              <div style={{ fontSize: '32px', marginBottom: '8px' }}>
                {achievement.icon}
              </div>
              <div style={{ 
                fontWeight: 600, 
                marginBottom: '4px',
                fontSize: '16px'
              }}>
                {achievement.title}
              </div>
              <div style={{ 
                fontSize: '14px',
                opacity: 0.8
              }}>
                {achievement.description}
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}

// Add at the top of the file, after imports
const styles = {
  button: {
    padding: '12px 28px',
    borderRadius: 24,
    border: '1px solid rgba(0,0,0,0.1)',
    background: 'rgba(255,255,255,0.8)',
    fontSize: 17,
    fontWeight: 500,
    cursor: 'pointer',
    transition: 'all 0.2s ease'
  } as const,
  buttonDark: {
    padding: '12px 28px',
    borderRadius: 24,
    border: 'none',
    background: '#000',
    color: '#fff',
    fontSize: 17,
    fontWeight: 500,
    cursor: 'pointer',
    transition: 'all 0.2s ease'
  } as const
};

type MetricKey = keyof Metrics;

const METRIC_LABELS: Record<MetricKey, string> = {
  AvPrice: 'Average Price',
  COGS: 'Cost of Goods Sold',
  C1: 'C1',
  Users: 'Users',
  CPUser: 'Cost per User',
  FixCosts: 'Fixed Costs',
  Margin: 'Margin',
  AMPPU: 'Average Monthly Profit per User',
  AMPU: 'Average Monthly Profit per User',
  Profit: 'Profit',
  ProfitNet: 'Net Profit'
};

const REVERSE_METRIC_LABELS: Record<string, MetricKey> = Object.entries(METRIC_LABELS)
  .reduce((acc, [key, value]) => ({
    ...acc,
    [value]: key as MetricKey
  }), {} as Record<string, MetricKey>);

function getMetricKeyFromLabel(label: string): MetricKey {
  return REVERSE_METRIC_LABELS[label] ?? 'ProfitNet';
}

function getMetricValue(metrics: Metrics, label: string): number {
  const key = getMetricKeyFromLabel(label);
  return metrics[key as keyof Metrics];
}

function isMetricKey(key: string): key is keyof Metrics {
  return [
    'AvPrice',
    'COGS',
    'C1',
    'Users',
    'CPUser',
    'FixCosts',
    'Margin',
    'AMPPU',
    'AMPU',
    'Profit',
    'ProfitNet'
  ].includes(key);
}

const METRIC_DISPLAY_MAP: Record<string, keyof Metrics> = {
  'Fix Costs': 'FixCosts',
  'Users': 'Users',
  'AvPrice': 'AvPrice',
  'COGS': 'COGS',
  'C1': 'C1',
  'CPUser': 'CPUser'
};

function StepNotification({ message, profitChangeMessage, onClose }: { message: string; profitChangeMessage: string; onClose: () => void }) {
  const [show, setShow] = useState(false);
  const isPositive = profitChangeMessage.includes('–≤—ã—Ä–æ—Å');

  useEffect(() => {
    setShow(true);
  }, []);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—è—Å–Ω—è—é—â–∏–π —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  const getExplanationText = () => {
    if (message.includes('SEO-–∫–∞–º–ø–∞–Ω–∏—è')) {
      return 'SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–π —Ç—Ä–∞—Ñ–∏–∫, —á—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.';
    } else if (message.includes('—Ç–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞')) {
      return '–¢–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ –ø–æ–ø–∞–¥–∞—Ç—å –≤ —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é, –ø–æ–≤—ã—à–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—é.';
    } else if (message.includes('–ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å –±–ª–æ–≥–µ—Ä–æ–º')) {
      return '–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å –±–ª–æ–≥–µ—Ä–∞–º–∏ –º–æ–∂–µ—Ç –±—ã—Å—Ç—Ä–æ —É–≤–µ–ª–∏—á–∏—Ç—å –±–∞–∑—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–æ –≤–∞–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞.';
    } else if (message.includes('A/B —Ç–µ—Å—Ç—ã')) {
      return 'A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω–≤–µ—Ä—Å–∏—é, –≤—ã—è–≤–ª—è—è –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.';
    } else if (message.includes('—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')) {
      return '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å—Ç–∏–º—É–ª–∏—Ä—É—é—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.';
    } else if (message.includes('–∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞')) {
      return '–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.';
    } else if (message.includes('–ò–ò-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è')) {
      return '–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –ò–ò –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ —Å–Ω–∏–∑–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã.';
    } else if (message.includes('–ø—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∞')) {
      return '–ü—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫, –Ω–æ –º–æ–∂–µ—Ç —Å–Ω–∏–∑–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Å–∏—é.';
    } else if (message.includes('–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏')) {
      return '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å–Ω–∏–∂–∞–µ—Ç —Ä–∞—Å—Ö–æ–¥—ã –∏ –º–æ–∂–µ—Ç —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è.';
    } else if (message.includes('–Ω–æ–≤–∞—è —Ñ–∏—á–∞')) {
      return '–ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç —Ü–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –º–æ–≥—É—Ç –ø—Ä–∏–≤–ª–µ—á—å –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.';
    } else if (message.includes('UI/UX')) {
      return '–£–ª—É—á—à–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–≤—ã—à–∞–µ—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏—é.';
    } else if (message.includes('–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è')) {
      return '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç –∏ –ø–æ–≤—ã—à–∞–µ—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—é.';
    } else if (message.includes('—á–µ–∫-–ª–∏—Å—Ç—ã')) {
      return '–ß–µ–∫-–ª–∏—Å—Ç—ã –ø–æ–º–æ–≥–∞—é—Ç –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±—ã—Å—Ç—Ä–µ–µ –æ—Å–≤–æ–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç.';
    } else if (message.includes('–ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥')) {
      return '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –æ—Ü–µ–Ω–∏—Ç—å —Ü–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∞.';
    } else if (message.includes('–∞—É—Ç—Å–æ—Ä—Å–∏–Ω–≥')) {
      return '–ê—É—Ç—Å–æ—Ä—Å–∏–Ω–≥ –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã.';
    } else if (message.includes('–ø–µ—Ä–µ–µ–∑–¥')) {
      return '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –æ—Ñ–∏—Å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –º–æ–∂–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Å–Ω–∏–∑–∏—Ç—å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã.';
    } else {
      return '–ö–∞–∂–¥–æ–µ —Ä–µ—à–µ–Ω–∏–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –±–∏–∑–Ω–µ—Å–∞. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.';
    }
  };

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      width: '100%',
      height: '100%',
      background: 'rgba(0,0,0,0.5)',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      zIndex: 1000,
      opacity: show ? 1 : 0,
      transition: 'opacity 0.3s ease'
    }}>
      <div style={{
        background: 'white',
        padding: '32px',
        borderRadius: '24px',
        maxWidth: '500px',
        width: '90%',
        textAlign: 'center',
        transform: show ? 'scale(1)' : 'scale(0.9)',
        opacity: show ? 1 : 0,
        transition: 'all 0.5s ease-out',
        boxShadow: '0 8px 32px rgba(0,0,0,0.12)'
      }}>
        <div style={{ 
          fontSize: '20px',
          color: '#1f2937',
          marginBottom: '16px',
          fontWeight: 600,
          lineHeight: 1.4
        }}>
          {message}
        </div>
        <div style={{ 
          fontSize: '16px',
          color: isPositive ? '#34c759' : '#ff3b30',
          marginBottom: '24px',
          fontWeight: 500,
          lineHeight: 1.4
        }}>
          {profitChangeMessage}
        </div>
        <div style={{ 
          padding: '16px',
          background: '#f3f4f6',
          borderRadius: '12px',
          marginBottom: '24px',
          color: '#4b5563',
          fontSize: '14px',
          lineHeight: 1.5
        }}>
          {getExplanationText()}
        </div>
        <button
          onClick={() => {
            setShow(false);
            setTimeout(onClose, 300);
          }}
          style={{
            background: 'linear-gradient(90deg, #3b82f6, #8b5cf6)',
            color: 'white',
            border: 'none',
            padding: '12px 24px',
            borderRadius: '8px',
            fontSize: '16px',
            cursor: 'pointer',
            width: '100%',
            transition: 'all 0.2s ease'
          }}
          onMouseEnter={e => e.currentTarget.style.opacity = '0.9'}
          onMouseLeave={e => e.currentTarget.style.opacity = '1'}
        >
          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
        </button>
      </div>
    </div>
  );
}

export default function EconomySimulator() {
  const [metrics, setMetrics] = useState<Metrics>(getInitialMetrics());
  const [turn, setTurn] = useState(1);
  const [message, setMessage] = useState<string | null>(null);
  const [profitChangeMessage, setProfitChangeMessage] = useState<string | null>(null);
  const [gameOver, setGameOver] = useState(false);
  const [isVictory, setIsVictory] = useState(false);
  const [department, setDepartment] = useState<Department | null>(null);
  const [currentInitiatives, setCurrentInitiatives] = useState<Initiative[]>([]);
  const [onboardingStep, setOnboardingStep] = useState(0);
  const [showOnboarding, setShowOnboarding] = useState(true);
  const departmentMeta = department ? DEPARTMENTS.find(dep => dep.key === department) : null;
  const [initiativeChances, setInitiativeChances] = useState<number[]>([]);
  const [balance, setBalance] = useState(30000);
  const [usersBelow100, setUsersBelow100] = useState(0);
  const [profitNetHistory, setProfitNetHistory] = useState<number[]>([metrics.ProfitNet]);
  const [prevMetrics, setPrevMetrics] = useState<Metrics | null>(null);
  const [showFireworks, setShowFireworks] = useState(false);
  const [achievements, setAchievements] = useState<Achievement[]>(ACHIEVEMENTS);
  const [showAchievementModal, setShowAchievementModal] = useState(false);
  const [newAchievement, setNewAchievement] = useState<Achievement | null>(null);
  const [showStepNotification, setShowStepNotification] = useState(false);
  const [stepNotificationMessage, setStepNotificationMessage] = useState<string | null>(null);
  const [stepNotificationProfitChange, setStepNotificationProfitChange] = useState<string | null>(null);

  function getRandomInitiatives(initiatives: Initiative[], count: number): Initiative[] {
    const shuffled = [...initiatives].sort(() => 0.5 - Math.random());
    return shuffled.slice(0, count);
  }

  function handleDepartmentSelect(dep: Department) {
    setDepartment(dep);
    const allInitiatives = INITIATIVES[dep];
    const selectedInitiatives = getRandomInitiatives(allInitiatives, 3);
    setCurrentInitiatives(selectedInitiatives);
    const chances = selectedInitiatives.map(() => 0.2 + Math.random() * 0.7);
    setInitiativeChances(chances);
  }

  function handleInitiative(idx: number) {
    if (gameOver || department === null) return;
    let m = { ...metrics };
    setPrevMetrics(metrics);
    const ini = currentInitiatives[idx];
    const chance = initiativeChances[idx] ?? ini.successChance;
    const rand = Math.random();
    if (rand < chance) {
      // –ü–æ–ª–Ω—ã–π —É—Å–ø–µ—Ö
      // ----- –†–ê–ó–û–ë–†–ê–¢–¨–°–Ø –° –†–ò–°–ö–ê–ú–ò -----
      m = ini.apply(m);
     // if (ini.risk && Math.random() < ini.risk.chance) {
     //   m = ini.risk.effect(m);
     //   setMessage(ini.risk.message);
     // } else {
        setMessage(ini.description + ` (–£—Å–ø–µ—Ö, –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞)`); // –æ–æ
      //  }
      // ----- –†–ê–ó–û–ë–†–ê–¢–¨–°–Ø –° –†–ò–°–ö–ê–ú–ò -----

    } else if (rand < chance + (1 - chance)) {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–Ω—ã–π –Ω–æ–ª—å (–Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç)
      if (Math.random() < (1 - chance)) { // –Ω–∞–¥–æ –ª–∏ –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ç–æ—Ä–æ–π —Ä–∞–Ω–¥–æ–º?
        setMessage('–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞.');
      } else {
        // –ß–∞—Å—Ç–∏—á–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç: —ç—Ñ—Ñ–µ–∫—Ç —É–º–Ω–æ–∂–∞–µ—Ç—Å—è –Ω–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å
        if (ini.partialEffect) {
          m = ini.partialEffect(m);
          setMessage('–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ —á–∞—Å—Ç–∏—á–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.');
        } else {
          // –ï—Å–ª–∏ partialEffect –Ω–µ –∑–∞–¥–∞–Ω, –ø—Ä–∏–º–µ–Ω—è–µ–º apply —Å –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∞
          const mFull = ini.apply(metrics);
          const mPartial: Metrics = { ...metrics };
          (Object.keys(mFull) as (keyof Metrics)[]).forEach(key => {
            if (typeof mFull[key] === 'number' && typeof metrics[key] === 'number') {
              mPartial[key] = (metrics[key] as number) + ((mFull[key] as number) - (metrics[key] as number)) * chance;
            }
          });
          m = recalcMetrics(mPartial);
          setMessage('–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ —á–∞—Å—Ç–∏—á–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.');
        }
      }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ Profit Net
    const profitNetChange = m.ProfitNet - metrics.ProfitNet;
    if (Math.abs(profitNetChange) > 0.01) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ
      const changeText = formatNumber(Math.abs(profitNetChange));
      if (profitNetChange > 0) {
        setProfitChangeMessage(`Profit Net –≤—ã—Ä–æ—Å –Ω–∞ $${changeText}`);
      } else {
        setProfitChangeMessage(`Profit Net —Å–Ω–∏–∑–∏–ª—Å—è –Ω–∞ $${changeText}`);
      }
    } else {
      setProfitChangeMessage('Profit Net –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è');
    }

    // --- –ë–∞–ª–∞–Ω—Å ---
    const newBalance = balance + m.ProfitNet;
    setBalance(newBalance);
    // --- Users < 100 ---
    let newUsersBelow100 = usersBelow100;
    if (m.Users < 100) {
      newUsersBelow100 += 1;
      if (newUsersBelow100 === 1) {
        setMessage(prev => (prev ? prev + ' ' : '') + '–ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –±–∞–∑–∞ —Å–æ–∫—Ä–∞—â–∞–µ—Ç—Å—è!');
      }
    } else {
      newUsersBelow100 = 0;
    }
    setUsersBelow100(newUsersBelow100);
    setMetrics(m);
    setProfitNetHistory(prev => [...prev, m.ProfitNet]);
    setTurn(turn + 1);
    setDepartment(null);
    setCurrentInitiatives([]);
    setInitiativeChances([]);
    
    // --- –ü–æ–±–µ–¥–∞/–ü–æ—Ä–∞–∂–µ–Ω–∏–µ ---
    if (m.ProfitNet >= 50000 && turn + 1 === 15) {
      setGameOver(true);
      setIsVictory(true);
      setMessage('–ü–æ–±–µ–¥–∞! Profit Net ‚â• $50,000 –∫ 15-–º—É —Ö–æ–¥—É');
    } else if (newBalance < 0) {
      setGameOver(true);
      setIsVictory(false);
      setMessage('–ü–æ—Ä–∞–∂–µ–Ω–∏–µ! –ë–∞–ª–∞–Ω—Å –∫–æ–º–ø–∞–Ω–∏–∏ —É—à—ë–ª –≤ –º–∏–Ω—É—Å.');
    } else if (newUsersBelow100 >= 2) {
      setGameOver(true);
      setIsVictory(false);
      setMessage('–ü–æ—Ä–∞–∂–µ–Ω–∏–µ! –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –±–∞–∑–∞ < 100 –¥–≤–∞ —Ö–æ–¥–∞ –ø–æ–¥—Ä—è–¥.');
    } else if (turn + 1 > 15) {
      setGameOver(true);
      setIsVictory(false);
      setMessage('–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –ù–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã —É—Å–ª–æ–≤–∏—è –ø–æ–±–µ–¥—ã.');
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —à–∞–≥–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏–≥—Ä–∞ –Ω–µ –æ–∫–æ–Ω—á–µ–Ω–∞
    if (!gameOver) {
      setShowStepNotification(true);
    }
  }

  function handleStartGame() {
    setShowOnboarding(false);
  }

  function handleRestart() {
    setMetrics(getInitialMetrics());
    setTurn(1);
    setMessage(null);
    setProfitChangeMessage(null);
    setGameOver(false);
    setIsVictory(false);
    setDepartment(null);
    setCurrentInitiatives([]);
    setInitiativeChances([]);
    setBalance(30000);
    setUsersBelow100(0);
    setProfitNetHistory([getInitialMetrics().ProfitNet]);
    setPrevMetrics(null);
  }

  useEffect(() => {
    if (!prevMetrics || gameOver) return;
    
    const newAchievements = achievements.map(achievement => {
      if (achievement.achieved) return achievement;
      
      const isAchieved = achievement.condition(metrics, prevMetrics, turn);
      if (isAchieved && !achievement.achieved) {
        setNewAchievement(achievement);
        return { ...achievement, achieved: true };
      }
      return achievement;
    });
    
    setAchievements(newAchievements);
  }, [metrics, prevMetrics, turn]);

  if (showOnboarding) {
    return (
      <section style={{ 
        maxWidth: 1000, 
        margin: '0 auto', 
        padding: '48px 32px',
        background: 'linear-gradient(135deg, rgba(255,255,255,0.98) 0%, rgba(248,248,248,0.98) 100%)',
        backdropFilter: 'blur(20px)',
        WebkitBackdropFilter: 'blur(20px)',
        borderRadius: 32,
        boxShadow: '0 8px 32px rgba(0,0,0,0.08)',
        border: '1px solid rgba(0,0,0,0.08)'
      }}>
        <div style={{ marginBottom: 48 }}>
          <h1 style={{ 
            fontSize: 56, 
            fontWeight: 700, 
            marginBottom: 32,
            background: 'linear-gradient(135deg, #000000 0%, #333333 100%)',
            WebkitBackgroundClip: 'text',
            WebkitTextFillColor: 'transparent',
            letterSpacing: '-0.02em',
            lineHeight: 1.1
          }}>
            {ONBOARDING_STEPS[onboardingStep].title}
          </h1>
          <div style={{ 
            marginBottom: 40,
            fontSize: 17,
            lineHeight: 1.6,
            color: '#1d1d1f'
          }}>
            {ONBOARDING_STEPS[onboardingStep].content}
          </div>
          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: 48 }}>
            <button 
              onClick={() => setOnboardingStep(prev => Math.max(0, prev - 1))}
              style={{ 
                ...styles.button,
                visibility: onboardingStep === 0 ? 'hidden' : 'visible',
                background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(248,248,248,0.9) 100%)',
                border: '1px solid rgba(0,0,0,0.08)',
                boxShadow: '0 4px 12px rgba(0,0,0,0.04)'
              }}
              className="hover-button"
            >
              –ù–∞–∑–∞–¥
            </button>
            {onboardingStep < ONBOARDING_STEPS.length - 1 ? (
              <button 
                onClick={() => setOnboardingStep(prev => prev + 1)}
                style={{
                  ...styles.buttonDark,
                  background: 'linear-gradient(135deg, #000000 0%, #333333 100%)',
                  boxShadow: '0 4px 12px rgba(0,0,0,0.12)'
                }}
                className="hover-button-dark"
              >
                –î–∞–ª–µ–µ
              </button>
            ) : (
              <button 
                onClick={handleStartGame}
                style={{
                  ...styles.buttonDark,
                  background: 'linear-gradient(135deg, #000000 0%, #333333 100%)',
                  boxShadow: '0 4px 12px rgba(0,0,0,0.12)'
                }}
                className="hover-button-dark"
              >
                –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
              </button>
            )}
          </div>
        </div>
      </section>
    );
  }

  return (
    <>
      <div style={{
        minHeight: '100vh',
        padding: '20px',
        display: 'grid',
        alignItems: 'center',
        background: 'linear-gradient(135deg, rgba(255,255,255,0.98) 0%, rgba(248,248,248,0.98) 100%)'
      }}>
        <section style={{ 
          maxWidth: 800, 
          margin: '0 auto',
          padding: '24px',
          background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(248,248,248,0.95) 100%)',
          backdropFilter: 'blur(20px)',
          WebkitBackdropFilter: 'blur(20px)',
          borderRadius: 32,
          boxShadow: '0 8px 32px rgba(0,0,0,0.08)',
          border: '1px solid rgba(0,0,0,0.08)',
          maxHeight: 'calc(100vh - 40px)',
          overflowY: 'auto',
          display: 'flex',
          flexDirection: 'column'
        }}>
          {/* Header */}
          <div style={{ 
            display: 'flex', 
            justifyContent: 'space-between', 
            alignItems: 'center',
            marginBottom: 16,
            flexShrink: 0
          }}>
            <h2 style={{ 
              fontWeight: 700, 
              fontSize: 28,
              letterSpacing: '-0.02em',
              margin: 0,
              background: 'linear-gradient(135deg, #000000 0%, #333333 100%)',
              WebkitBackgroundClip: 'text',
              WebkitTextFillColor: 'transparent'
            }}>
             InboxMind - AI Mail Master
            </h2>
            <button
              onClick={() => setShowAchievementModal(true)}
              style={{
                background: 'none',
                border: '1px solid rgba(0,0,0,0.1)',
                borderRadius: '12px',
                padding: '8px 16px',
                display: 'flex',
                alignItems: 'center',
                gap: '8px',
                cursor: 'pointer',
                fontSize: '15px',
                marginRight: '24px'
              }}
            >
              üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è ({achievements.filter(a => a.achieved).length}/{achievements.length})
            </button>
          </div>

          {/* Main content */}
          <div style={{ 
            flex: 1,
            overflowY: 'auto',
            paddingRight: '16px',
            marginRight: '-16px',
            display: 'flex',
            flexDirection: 'column',
            gap: '16px'
          }}>
            {/* Turn counter */}
            <div style={{ 
              fontSize: 15, 
              color: '#1d1d1f',
              display: 'flex',
              alignItems: 'center',
              gap: 8
            }}>
              <span style={{ fontWeight: 500 }}>–•–æ–¥:</span> 
              <span style={{ 
                background: '#000', 
                color: '#fff',
                padding: '4px 12px',
                borderRadius: 12,
                fontSize: 15
              }}>{turn} / 15</span>
            </div>

            {/* Metrics grid */}
            <div style={{ 
              display: 'grid', 
              gridTemplateColumns: '1fr 1fr',
              gap: 16
            }}>
              <div style={{ 
                background: 'rgba(255,255,255,0.8)',
                borderRadius: 20,
                padding: 16,
                backdropFilter: 'blur(20px)',
                WebkitBackdropFilter: 'blur(20px)',
                border: '1px solid rgba(0,0,0,0.1)'
              }}>
                <div style={{ fontSize: 14, color: '#86868b', marginBottom: 4 }}>Profit Net / –¶–µ–ª—å $50 000</div>
                <div style={{ 
                  fontWeight: 600, 
                  fontSize: 24,
                  letterSpacing: '-0.02em',
                  color: metrics.ProfitNet < 0 ? '#ff3b30' : '#1d1d1f'
                }}>
                  ${Math.round(metrics.ProfitNet).toLocaleString('ru-RU')}
                </div>
              </div>
              <div style={{ 
                background: 'rgba(255,255,255,0.8)',
                borderRadius: 20,
                padding: 16,
                backdropFilter: 'blur(20px)',
                WebkitBackdropFilter: 'blur(20px)',
                border: '1px solid rgba(0,0,0,0.1)'
              }}>
                <div style={{ fontSize: 14, color: '#86868b', marginBottom: 4 }}>–ë–∞–ª–∞–Ω—Å</div>
                <div style={{ 
                  fontWeight: 600, 
                  fontSize: 24,
                  letterSpacing: '-0.02em',
                  color: balance < 0 ? '#ff3b30' : '#1d1d1f'
                }}>
                  ${formatNumber(Math.round(balance))}
                </div>
              </div>
            </div>

            {/* Chart */}
            <div style={{ 
              width: '100%', 
              height: 160,
              background: 'rgba(255,255,255,0.8)',
              borderRadius: 20,
              padding: '12px',
              backdropFilter: 'blur(20px)',
              WebkitBackdropFilter: 'blur(20px)',
              border: '1px solid rgba(0,0,0,0.1)'
            }}>
              <ResponsiveContainer width="100%" height="100%">
                <LineChart data={profitNetHistory.map((v, i) => ({ turn: i + 1, profitNet: v }))} margin={{ top: 5, right: 5, left: 5, bottom: 5 }}>
                  <CartesianGrid strokeDasharray="3 3" stroke="rgba(0,0,0,0.1)" />
                  <XAxis 
                    dataKey="turn" 
                    tickCount={16} 
                    stroke="#86868b"
                    label={{ value: '–•–æ–¥', position: 'insideBottom', offset: -5 }} 
                  />
                  <YAxis 
                    tickFormatter={v => `$${v.toLocaleString('ru-RU')}`} 
                    domain={['auto', 'auto']} 
                    stroke="#86868b"
                    label={{ value: 'Profit Net', angle: -90, position: 'insideLeft', offset: 10 }} 
                  />
                  <Tooltip 
                    formatter={v => `$${v.toLocaleString('ru-RU')}`} 
                    labelFormatter={l => `–•–æ–¥: ${l}`}
                    contentStyle={{
                      background: 'rgba(255,255,255,0.95)',
                      border: '1px solid rgba(0,0,0,0.1)',
                      borderRadius: 12,
                      boxShadow: '0 4px 16px rgba(0,0,0,0.08)'
                    }}
                  />
                  <Line 
                    type="monotone" 
                    dataKey="profitNet" 
                    stroke="#000"
                    strokeWidth={2.5}
                    dot={false}
                  />
                  <ReferenceLine 
                    y={50000} 
                    stroke="#2ecc71" 
                    strokeDasharray="6 2" 
                    label={{ 
                      value: '–¶–µ–ª—å: $50,000', 
                      position: 'right', 
                      fill: '#2ecc71', 
                      fontWeight: 600, 
                      fontSize: 13 
                    }} 
                  />
                </LineChart>
              </ResponsiveContainer>
            </div>

            {/* Additional metrics */}
            <div style={{ 
              display: 'grid',
              gridTemplateColumns: 'repeat(3, 1fr)',
              gap: 8
            }}>
              {[
                { label: '–ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å', value: `${(Math.round(metrics.Margin * 100)).toFixed(1)}%`, color: metrics.Margin < 0 ? '#ff3b30' : '#1d1d1f' },
                { label: 'AMPPU', value: `$${formatNumber(Math.round(metrics.AMPPU))}`, color: metrics.AMPPU < 0 ? '#ff3b30' : '#1d1d1f' },
                { label: 'AMPU - CPUser', value: `$${(Math.round(metrics.AMPU) - Math.round(metrics.CPUser)).toFixed(2)}`, color: (Math.round(metrics.AMPU) - Math.round(metrics.CPUser)) < 0 ? '#ff3b30' : '#1d1d1f' }
              ].map((item, index) => (
                <div key={index} style={{ 
                  background: 'rgba(255,255,255,0.8)',
                  borderRadius: 16,
                  padding: 12,
                  backdropFilter: 'blur(20px)',
                  WebkitBackdropFilter: 'blur(20px)',
                  border: '1px solid rgba(0,0,0,0.1)'
                }}>
                  <div style={{ fontSize: 12, color: '#86868b', marginBottom: 4 }}>{item.label}</div>
                  <div style={{ fontWeight: 600, fontSize: 18, color: item.color }}>{item.value}</div>
                </div>
              ))}
            </div>

            {/* Detailed metrics */}
            <div style={{ 
              display: 'grid',
              gridTemplateColumns: 'repeat(6, 1fr)',
              gap: 6
            }}>
              {[
                { label: 'Fix Costs', value: `$${formatNumber(Math.round(metrics.FixCosts))}`, prev: prevMetrics?.FixCosts },
                { label: 'Users', value: `${formatNumber(Math.round(metrics.Users))}`, prev: prevMetrics?.Users },
                { label: 'AvPrice', value: `$${formatNumber(Math.round(metrics.AvPrice))}`, prev: prevMetrics?.AvPrice },
                { label: 'COGS', value: `$${formatNumber(Math.round(metrics.COGS))}`, prev: prevMetrics?.COGS },
                { label: 'C1', value: `${metrics.C1.toFixed(1)}%`, prev: prevMetrics?.C1 },
                { label: 'CPUser', value: `$${formatNumber(Math.round(metrics.CPUser))}`, prev: prevMetrics?.CPUser }
              ].map((item, index) => {
                const metricKey = METRIC_DISPLAY_MAP[item.label];
                return (
                  <div key={index} style={{ 
                    background: 'rgba(255,255,255,0.8)',
                    borderRadius: 12,
                    padding: 8,
                    backdropFilter: 'blur(20px)',
                    WebkitBackdropFilter: 'blur(20px)',
                    border: '1px solid rgba(0,0,0,0.1)'
                  }}>
                    <div style={{ fontSize: 11, color: '#86868b', marginBottom: 2 }}>{item.label}</div>
                    <div style={{ fontWeight: 600, fontSize: 13 }}>{item.value}</div>
                    {item.prev !== undefined && metricKey && item.prev !== metrics[metricKey] && (
                      <div style={{ fontSize: 10, color: '#86868b', marginTop: 2 }}>
                        ({typeof item.prev === 'number' ? 
                          (item.label === 'C1' ? 
                            `${item.prev.toFixed(1)}% ‚Üí ${metrics.C1.toFixed(1)}%` :
                            `${item.label.includes('$') ? '$' : ''}${formatNumber(Math.round(item.prev))} ‚Üí ${item.label.includes('$') ? '$' : ''}${formatNumber(Math.round(metrics[metricKey]))}`
                          ) : ''})
                      </div>
                    )}
                  </div>
                );
              })}
            </div>

            {/* Department selection */}
            {!department && !gameOver && (
              <div style={{
                background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(248,248,248,0.95) 100%)',
                borderRadius: 20,
                padding: '24px',
                backdropFilter: 'blur(20px)',
                WebkitBackdropFilter: 'blur(20px)',
                border: '1px solid rgba(0,0,0,0.08)',
                boxShadow: '0 4px 24px rgba(0,0,0,0.04)'
              }}>
                <div style={{ 
                  display: 'flex',
                  alignItems: 'center',
                  gap: 12,
                  marginBottom: 16
                }}>
                  <div style={{ 
                    background: '#000',
                    color: '#fff',
                    padding: '4px 12px',
                    borderRadius: 12,
                    fontSize: 15,
                    fontWeight: 500
                  }}>
                    {turn} —Ö–æ–¥
                  </div>
                  <div style={{ 
                    fontWeight: 600, 
                    fontSize: 18,
                    color: '#1d1d1f'
                  }}>
                    –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                  </div>
                </div>
                <div style={{ 
                  display: 'grid',
                  gridTemplateColumns: 'repeat(4, 1fr)',
                  gap: 8
                }}>
                  {DEPARTMENTS.map(dep => (
                    <button 
                      key={dep.key} 
                      onClick={() => handleDepartmentSelect(dep.key)} 
                      style={{ 
                        padding: '12px 16px',
                        borderRadius: 16,
                        border: '1px solid rgba(0,0,0,0.1)',
                        background: 'rgba(255,255,255,0.8)',
                        backdropFilter: 'blur(20px)',
                        WebkitBackdropFilter: 'blur(20px)',
                        display: 'flex',
                        flexDirection: 'column',
                        alignItems: 'flex-start',
                        cursor: 'pointer',
                        transition: 'all 0.2s ease'
                      }}
                    >
                      <span style={{ fontSize: 24, marginBottom: 4 }}>{dep.icon}</span>
                      <span style={{ 
                        fontWeight: 600,
                        fontSize: 15,
                        color: '#1d1d1f',
                        marginBottom: 4
                      }}>{dep.label}</span>
                      <span style={{ 
                        fontSize: 11,
                        color: '#86868b',
                        lineHeight: 1.4
                      }}>{dep.desc}</span>
                    </button>
                  ))}
                </div>
              </div>
            )}

            {/* Initiative selection */}
            {department && !gameOver && (
              <div style={{
                background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(248,248,248,0.95) 100%)',
                borderRadius: 20,
                padding: '24px',
                backdropFilter: 'blur(20px)',
                WebkitBackdropFilter: 'blur(20px)',
                border: '1px solid rgba(0,0,0,0.08)',
                boxShadow: '0 4px 24px rgba(0,0,0,0.04)'
              }}>
                <div style={{ 
                  display: 'flex',
                  alignItems: 'center',
                  gap: 12,
                  marginBottom: 16
                }}>
                  <div style={{ 
                    background: '#000',
                    color: '#fff',
                    padding: '4px 12px',
                    borderRadius: 12,
                    fontSize: 15,
                    fontWeight: 500
                  }}>
                    {turn} —Ö–æ–¥
                  </div>
                  <div style={{ 
                    fontWeight: 600, 
                    fontSize: 18,
                    color: '#1d1d1f',
                    display: 'flex',
                    alignItems: 'center',
                    gap: 8
                  }}>
                    –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É / 
                    <span style={{ fontSize: 20 }}>{DEPARTMENTS.find(d => d.key === department)?.icon}</span>
                    <span style={{ fontSize: 15 }}>{DEPARTMENTS.find(d => d.key === department)?.label}</span>
                  </div>
                </div>
                <div style={{ 
                  display: 'grid',
                  gridTemplateColumns: 'repeat(3, 1fr)',
                  gap: 8
                }}>
                  {currentInitiatives.map((ini, idx) => (
                    <button 
                      key={ini.title} 
                      onClick={() => handleInitiative(idx)} 
                      style={{ 
                        padding: '16px 20px',
                        borderRadius: 16,
                        border: '1px solid rgba(0,0,0,0.1)',
                        background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.95) 100%)',
                        backdropFilter: 'blur(20px)',
                        WebkitBackdropFilter: 'blur(20px)',
                        cursor: gameOver ? 'not-allowed' : 'pointer',
                        transition: 'all 0.2s ease',
                        textAlign: 'left',
                        height: '180px',
                        display: 'flex',
                        flexDirection: 'column',
                        justifyContent: 'space-between'
                      }}
                    >
                      <div>
                        <div style={{ 
                          fontWeight: 600,
                          fontSize: 16,
                          color: '#1d1d1f',
                          marginBottom: 8
                        }}>{ini.title}</div>
                        <div style={{ 
                          color: '#86868b',
                          fontSize: 13,
                          marginBottom: 12,
                          display: '-webkit-box',
                          WebkitLineClamp: 4,
                          WebkitBoxOrient: 'vertical',
                          overflow: 'hidden',
                          textOverflow: 'ellipsis',
                          lineHeight: 1.5
                        }}>{ini.description}</div>
                      </div>
                      <div style={{ 
                        display: 'inline-block',
                        padding: '4px 12px',
                        borderRadius: 8,
                        background: 'linear-gradient(135deg, #000000 0%, #333333 100%)',
                        color: '#fff',
                        fontSize: 12,
                        fontWeight: 500,
                        alignSelf: 'flex-start'
                      }}>
                        –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞: {initiativeChances[idx] ? Math.round(initiativeChances[idx] * 100) : Math.round(ini.successChance * 100)}%
                      </div>
                    </button>
                  ))}
                </div>
              </div>
            )}
          </div>
        </section>
      </div>
      {gameOver && isVictory && <VictoryModal onRestart={handleRestart} />}
      {gameOver && !isVictory && <DefeatModal onRestart={handleRestart} />}
      {showStepNotification && message && profitChangeMessage && !gameOver && (
        <StepNotification 
          message={message}
          profitChangeMessage={profitChangeMessage}
          onClose={() => {
            setShowStepNotification(false);
            setMessage(null);
            setProfitChangeMessage(null);
          }}
        />
      )}
      {showAchievementModal && (
        <AchievementsModal 
          achievements={achievements}
          onClose={() => setShowAchievementModal(false)}
        />
      )}
      {newAchievement && (
        <AchievementNotification 
          achievement={newAchievement}
          onClose={() => setNewAchievement(null)}
        />
      )}
    </>
  );
}

// Add at the end of the file, before the last closing bracket
const styleSheet = document.createElement('style');
styleSheet.textContent = `
  .hover-button:hover {
    background: linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(248,248,248,0.95) 100%) !important;
    transform: translateY(-1px);
    box-shadow: 0 6px 16px rgba(0,0,0,0.06) !important;
  }
  .hover-button-dark:hover {
    background: linear-gradient(135deg, #1d1d1f 0%, #333333 100%) !important;
    transform: translateY(-1px);
    box-shadow: 0 6px 16px rgba(0,0,0,0.12) !important;
  }
`;
document.head.appendChild(styleSheet);
